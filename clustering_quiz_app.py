import streamlit as st

# Thi·∫øt l·∫≠p c·∫•u h√¨nh trang
st.set_page_config(page_title="Tr·∫Øc nghi·ªám H·ªçc M√°y", layout="centered")
st.title("üß† Tr·∫Øc nghi·ªám H·ªçc M√°y")

# Sidebar ƒë·ªÉ ch·ªçn ph·∫ßn c√¢u h·ªèi
quiz_sections = [
    "C∆° b·∫£n v·ªÅ AI v√† H·ªçc M√°y",
    "Thu·∫≠t to√°n Ph√¢n c·ª•m",
    "Gi·∫£m chi·ªÅu d·ªØ li·ªáu",
    "H·ªìi quy Tuy·∫øn t√≠nh v√† Normal Equation",
    "Gradient Descent",
    "Mini-batch, Stochastic, Batch Gradient Descent",
    "Multiple Linear Regression",
    "Regularization (Ridge, Lasso, Elastic Net)",
    "Logistic Regression",
    "Softmax Regression",
    "Decision Trees",
    "k-Nearest Neighbors (k-NN)",
    "Naive Bayes",
    "·ª®ng d·ª•ng Th·ª±c t·∫ø",
    "Reinforcement Learning"
]
section = st.sidebar.radio("Ch·ªçn ph·∫ßn c√¢u h·ªèi", quiz_sections)

# ==== D·ªÆ LI·ªÜU C√ÇU H·ªéI ====

# Ph·∫ßn 1: C∆° b·∫£n v·ªÅ AI v√† H·ªçc M√°y
ai_ml_questions = [
    {
        "question": "D·ªØ li·ªáu kh√¥ng c·∫•u tr√∫c d·ªÖ d√†ng x·ª≠ l√Ω h∆°n d·ªØ li·ªáu c√≥ c·∫•u tr√∫c.",
        "options": ["True", "False"],
        "answer": "False",
        "explanation": "D·ªØ li·ªáu kh√¥ng c·∫•u tr√∫c (nh∆∞ ·∫£nh, video) kh√≥ x·ª≠ l√Ω h∆°n d·ªØ li·ªáu c√≥ c·∫•u tr√∫c (nh∆∞ b·∫£ng t√≠nh) v√¨ n√≥ thi·∫øu t·ªï ch·ª©c r√µ r√†ng."
    },
    {
        "question": "\"M√πa ƒë√¥ng c·ªßa AI\" l√† giai ƒëo·∫°n m√† h·ªçc m√°y ph√°t tri·ªÉn m·∫°nh m·∫Ω nh·∫•t.",
        "options": ["True", "False"],
        "answer": "False",
        "explanation": "\"M√πa ƒë√¥ng c·ªßa AI\" l√† giai ƒëo·∫°n suy tho√°i trong nghi√™n c·ª©u AI, kh√¥ng ph·∫£i th·ªùi k·ª≥ ph√°t tri·ªÉn m·∫°nh m·∫Ω."
    },
    {
        "question": "Deep Learning l√† m·ªôt b∆∞·ªõc ti·∫øn quan tr·ªçng trong qu√° tr√¨nh ph√°t tri·ªÉn c·ªßa h·ªçc m√°y.",
        "options": ["True", "False"],
        "answer": "True",
        "explanation": "Deep Learning l√† m·ªôt nh√°nh quan tr·ªçng c·ªßa h·ªçc m√°y, s·ª≠ d·ª•ng m·∫°ng n∆°-ron s√¢u ƒë·ªÉ gi·∫£i quy·∫øt c√°c b√†i to√°n ph·ª©c t·∫°p."
    },
    {
        "question": "H·ªçc m√°y l√† m·ªôt nh√°nh c·ªßa tr√≠ tu·ªá nh√¢n t·∫°o (AI).",
        "options": ["True", "False"],
        "answer": "True",
        "explanation": "H·ªçc m√°y l√† m·ªôt ph·∫ßn c·ªßa AI, t·∫≠p trung v√†o vi·ªác ph√°t tri·ªÉn c√°c thu·∫≠t to√°n t·ª± h·ªçc t·ª´ d·ªØ li·ªáu."
    },
    {
        "question": "H·ªçc s√¢u (Deep Learning) ƒë∆∞·ª£c s·ª≠ d·ª•ng r·ªông r√£i trong c√°c lƒ©nh v·ª±c n√†o?",
        "options": ["Nh·∫≠n d·∫°ng h√¨nh ·∫£nh", "D·ªãch ng√¥n ng·ªØ", "Xe t·ª± l√°i", "T·∫•t c·∫£ c√°c ƒë√°p √°n tr√™n"],
        "answer": "T·∫•t c·∫£ c√°c ƒë√°p √°n tr√™n",
        "explanation": "Deep Learning ƒë∆∞·ª£c ·ª©ng d·ª•ng r·ªông r√£i trong nh·∫≠n d·∫°ng h√¨nh ·∫£nh, d·ªãch ng√¥n ng·ªØ, xe t·ª± l√°i v√† nhi·ªÅu lƒ©nh v·ª±c kh√°c."
    },
    {
        "question": "D·ªØ li·ªáu n√†o sau ƒë√¢y ƒë∆∞·ª£c coi l√† d·ªØ li·ªáu c√≥ c·∫•u tr√∫c?",
        "options": ["·∫¢nh ch·ª•p", "ƒêo·∫°n video", "D·ªØ li·ªáu b√°n h√†ng trong m·ªôt b·∫£ng t√≠nh", "B√†i vi·∫øt tr√™n blog"],
        "answer": "D·ªØ li·ªáu b√°n h√†ng trong m·ªôt b·∫£ng t√≠nh",
        "explanation": "D·ªØ li·ªáu c√≥ c·∫•u tr√∫c ƒë∆∞·ª£c t·ªï ch·ª©c trong c√°c ƒë·ªãnh d·∫°ng nh∆∞ b·∫£ng t√≠nh, d·ªÖ d√†ng truy v·∫•n v√† ph√¢n t√≠ch."
    },
    {
        "question": "Nh·∫≠n d·∫°ng h√¨nh ·∫£nh l√† m·ªôt ·ª©ng d·ª•ng ph·ªï bi·∫øn c·ªßa h·ªçc m√°y.",
        "options": ["True", "False"],
        "answer": "True",
        "explanation": "Nh·∫≠n d·∫°ng h√¨nh ·∫£nh l√† m·ªôt trong nh·ªØng ·ª©ng d·ª•ng n·ªïi b·∫≠t c·ªßa h·ªçc m√°y, ƒë·∫∑c bi·ªát trong h·ªçc s√¢u."
    },
    {
        "question": "AI v√† H·ªçc m√°y l√† hai thu·∫≠t ng·ªØ ho√†n to√†n t√°ch bi·ªát, kh√¥ng c√≥ m·ªëi quan h·ªá v·ªõi nhau.",
        "options": ["True", "False"],
        "answer": "False",
        "explanation": "H·ªçc m√°y l√† m·ªôt nh√°nh c·ªßa AI, gi√∫p h·ªá th·ªëng h·ªçc h·ªèi t·ª´ d·ªØ li·ªáu ƒë·ªÉ th·ª±c hi·ªán c√°c nhi·ªám v·ª• th√¥ng minh."
    },
    {
        "question": "·ª®ng d·ª•ng n√†o sau ƒë√¢y kh√¥ng ph·∫£i l√† m·ªôt ·ª©ng d·ª•ng c·ªßa h·ªçc m√°y?",
        "options": ["Nh·∫≠n di·ªán khu√¥n m·∫∑t", "T√¨m ki·∫øm th√¥ng tin tr√™n Google", "V·∫Ω tranh", "D·ª± ƒëo√°n gi√° c·ªï phi·∫øu"],
        "answer": "V·∫Ω tranh",
        "explanation": "V·∫Ω tranh kh√¥ng ph·∫£i l√† ·ª©ng d·ª•ng tr·ª±c ti·∫øp c·ªßa h·ªçc m√°y, m·∫∑c d√π h·ªçc m√°y c√≥ th·ªÉ h·ªó tr·ª£ t·∫°o ngh·ªá thu·∫≠t qua c√°c m√¥ h√¨nh nh∆∞ GAN."
    },
    {
        "question": "M·ªëi quan h·ªá gi·ªØa H·ªçc m√°y v√† Tr√≠ tu·ªá nh√¢n t·∫°o l√† g√¨?",
        "options": ["H·ªçc m√°y l√† m·ªôt ph·∫ßn c·ªßa Tr√≠ tu·ªá nh√¢n t·∫°o", "Tr√≠ tu·ªá nh√¢n t·∫°o l√† m·ªôt ph·∫ßn c·ªßa H·ªçc m√°y", 
                    "H·ªçc m√°y v√† Tr√≠ tu·ªá nh√¢n t·∫°o kh√¥ng li√™n quan ƒë·∫øn nhau", "H·ªçc m√°y ch·ªâ l√† m·ªôt kh√°i ni·ªám trong l√Ω thuy·∫øt, kh√¥ng √°p d·ª•ng v√†o th·ª±c ti·ªÖn"],
        "answer": "H·ªçc m√°y l√† m·ªôt ph·∫ßn c·ªßa Tr√≠ tu·ªá nh√¢n t·∫°o",
        "explanation": "H·ªçc m√°y l√† m·ªôt lƒ©nh v·ª±c con c·ªßa AI, t·∫≠p trung v√†o c√°c thu·∫≠t to√°n h·ªçc t·ª´ d·ªØ li·ªáu."
    },
    {
        "question": "Giai ƒëo·∫°n n√†o ƒë∆∞·ª£c xem l√† s·ª± h·ªìi sinh c·ªßa h·ªçc m√°y?",
        "options": ["Nh·ªØng nƒÉm 1950 - 1980", "Giai ƒëo·∫°n tr∆∞·ªõc \"m√πa ƒë√¥ng c·ªßa AI\"", "T·ª´ nƒÉm 1990 tr·ªü ƒëi", "Th·ªùi ƒëi·ªÉm xu·∫•t hi·ªán m√°y t√≠nh c√° nh√¢n"],
        "answer": "T·ª´ nƒÉm 1990 tr·ªü ƒëi",
        "explanation": "H·ªçc m√°y h·ªìi sinh t·ª´ nh·ªØng nƒÉm 1990 nh·ªù s·ª± gia tƒÉng s·ª©c m·∫°nh t√≠nh to√°n v√† d·ªØ li·ªáu l·ªõn."
    },
    {
        "question": "V√≠ d·ª• n√†o sau ƒë√¢y l√† m·ªôt ·ª©ng d·ª•ng c·ªßa H·ªçc m√°y?",
        "options": ["G·ª£i √Ω s·∫£n ph·∫©m tr√™n trang th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠", "L·∫≠p k·∫ø ho·∫°ch cho c√°c chi·∫øn d·ªãch marketing", 
                    "T·∫°o giao di·ªán ng∆∞·ªùi d√πng", "Vi·∫øt m√£ ngu·ªìn cho ·ª©ng d·ª•ng web"],
        "answer": "G·ª£i √Ω s·∫£n ph·∫©m tr√™n trang th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠",
        "explanation": "H·ªá th·ªëng g·ª£i √Ω s·∫£n ph·∫©m s·ª≠ d·ª•ng h·ªçc m√°y ƒë·ªÉ ph√¢n t√≠ch h√†nh vi ng∆∞·ªùi d√πng v√† ƒë·ªÅ xu·∫•t s·∫£n ph·∫©m ph√π h·ª£p."
    },
    {
        "question": "H·ªçc m√°y l√† g√¨?",
        "options": ["M·ªôt nh√°nh c·ªßa l·∫≠p tr√¨nh truy·ªÅn th·ªëng", "M·ªôt nh√°nh c·ªßa tr√≠ tu·ªá nh√¢n t·∫°o", 
                    "M·ªôt ph∆∞∆°ng ph√°p l·∫≠p tr√¨nh kh√¥ng c·∫ßn d·ªØ li·ªáu", "M·ªôt thu·∫≠t to√°n t·ªëi ∆∞u h√≥a"],
        "answer": "M·ªôt nh√°nh c·ªßa tr√≠ tu·ªá nh√¢n t·∫°o",
        "explanation": "H·ªçc m√°y l√† m·ªôt nh√°nh c·ªßa AI, cho ph√©p m√°y t√≠nh h·ªçc t·ª´ d·ªØ li·ªáu m√† kh√¥ng c·∫ßn l·∫≠p tr√¨nh chi ti·∫øt."
    },
    {
        "question": "Xe t·ª± l√°i l√† m·ªôt ·ª©ng d·ª•ng c·ªßa h·ªçc s√¢u trong lƒ©nh v·ª±c √¥ t√¥.",
        "options": ["True", "False"],
        "answer": "True",
        "explanation": "Xe t·ª± l√°i s·ª≠ d·ª•ng h·ªçc s√¢u ƒë·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu t·ª´ c·∫£m bi·∫øn v√† ƒë∆∞a ra quy·∫øt ƒë·ªãnh l√°i xe."
    }
]

# Ph·∫ßn 2: Thu·∫≠t to√°n Ph√¢n c·ª•m
clustering_questions = [
    {
        "question": "L√†m th·∫ø n√†o ƒë·ªÉ ph√¢n c·ª•m m·ªôt t·∫≠p d·ªØ li·ªáu c√≥ c√°c c·ª•m v·ªõi h√¨nh d·∫°ng h·ªón h·ª£p?",
        "options": ["K-means r·ªìi DBSCAN", "DBSCAN r·ªìi K-means", "Agglomerative r·ªìi K-means", "K-means v√† Agglomerative"],
        "answer": "DBSCAN r·ªìi K-means",
        "explanation": "B·∫°n s·∫Ω d√πng DBSCAN tr∆∞·ªõc ƒë·ªÉ t√¨m c·ª•m c√≥ h√¨nh d·∫°ng ph·ª©c t·∫°p, sau ƒë√≥ d√πng K-means ƒë·ªÉ tinh ch·ªânh."
    },
    {
        "question": "T·∫°i sao DBSCAN g·∫Øn nh√£n h·∫ßu h·∫øt c√°c ƒëi·ªÉm l√† nhi·ªÖu?",
        "options": ["Eps nh·ªè ho·∫∑c MinPts cao", "C·ª•m h√¨nh c·∫ßu", "Kh√¥ng x√°c ƒë·ªãnh s·ªë c·ª•m", "Ti√™u ch√≠ li√™n k·∫øt k√©m"],
        "answer": "Eps nh·ªè ho·∫∑c MinPts cao",
        "explanation": "DBSCAN g√°n nhi·ªÅu ƒëi·ªÉm th√†nh nhi·ªÖu n·∫øu kho·∫£ng c√°ch t·ªëi ƒëa (Eps) nh·ªè ho·∫∑c s·ªë ƒëi·ªÉm t·ªëi thi·ªÉu (MinPts) cao."
    },
    {
        "question": "Li√™n k·∫øt (linkage) ƒë√≥ng vai tr√≤ g√¨ trong Agglomerative Clustering?",
        "options": ["X√°c ƒë·ªãnh s·ªë l∆∞·ª£ng c·ª•m", "X√°c ƒë·ªãnh kho·∫£ng c√°ch g·ªôp", "ƒê·∫∑t ng∆∞·ª°ng m·∫≠t ƒë·ªô", "ƒê·ªãnh v·ªã t√¢m c·ª•m"],
        "answer": "X√°c ƒë·ªãnh kho·∫£ng c√°ch g·ªôp",
        "explanation": "Li√™n k·∫øt (linkage) x√°c ƒë·ªãnh c√°ch t√≠nh kho·∫£ng c√°ch ƒë·ªÉ g·ªôp c·ª•m trong Agglomerative Clustering."
    },
    {
        "question": "Thu·∫≠t to√°n n√†o √≠t ph√π h·ª£p nh·∫•t v·ªõi t·∫≠p d·ªØ li·ªáu l·ªõn?",
        "options": ["K-means", "DBSCAN", "Agglomerative Clustering", "DBSCAN v√† Agglomerative"],
        "answer": "Agglomerative Clustering",
        "explanation": "Agglomerative Clustering t√≠nh to√°n nhi·ªÅu kho·∫£ng c√°ch, kh√¥ng hi·ªáu qu·∫£ v·ªõi t·∫≠p d·ªØ li·ªáu l·ªõn."
    },
    {
        "question": "Dendrogram c·ªßa single linkage v√† complete linkage kh√°c nhau nh∆∞ th·∫ø n√†o?",
        "options": ["Single t·∫°o c·ª•m ch·∫∑t ch·∫Ω", "Complete t·∫°o c·ª•m d·∫°ng chu·ªói", "Single t·∫°o c·ª•m d·∫°ng chu·ªói", "C·∫£ hai t·∫°o c·ª•m gi·ªëng nhau"],
        "answer": "Single t·∫°o c·ª•m d·∫°ng chu·ªói",
        "explanation": "Single linkage c√≥ xu h∆∞·ªõng t·∫°o c·ª•m chu·ªói d√†i, c√≤n complete linkage t·∫°o c·ª•m ch·∫∑t ch·∫Ω h∆°n."
    },
    {
        "question": "Thu·∫≠t to√°n n√†o t·ªët nh·∫•t cho c√°c c·ª•m kh√¥ng x√°c ƒë·ªãnh v·ªõi nhi·ªÖu?",
        "options": ["K-means v·ªõi K c·ªë ƒë·ªãnh", "DBSCAN", "Single-link Agglomerative", "Average-link Agglomerative"],
        "answer": "DBSCAN",
        "explanation": "DBSCAN t·ª± ƒë·ªông ph√°t hi·ªán c·ª•m v√† ph√¢n bi·ªát nhi·ªÖu t·ªët khi kh√¥ng bi·∫øt tr∆∞·ªõc s·ªë c·ª•m."
    },
    {
        "question": "Thu·∫≠t to√°n n√†o ph√π h·ª£p v·ªõi c·ª•m h√¨nh c·∫ßu kh√¥ng c√≥ nhi·ªÖu?",
        "options": ["DBSCAN", "K-means", "Single-link Agglomerative", "Complete-link Agglomerative"],
        "answer": "K-means",
        "explanation": "K-means ph√π h·ª£p v·ªõi c·ª•m h√¨nh c·∫ßu v√† d·ªØ li·ªáu √≠t nhi·ªÖu."
    },
    {
        "question": "M·ª•c ti√™u ch√≠nh c·ªßa K-means clustering l√† g√¨?",
        "options": ["T·ªëi ƒëa h√≥a m·∫≠t ƒë·ªô ƒëi·ªÉm trong c·ª•m", "Gi·∫£m kho·∫£ng c√°ch t·ªõi t√¢m c·ª•m", "X√¢y d·ª±ng h·ªá th·ªëng ph√¢n c·∫•p c·ª•m", "Li√™n k·∫øt c·ª•m theo kho·∫£ng c√°ch"],
        "answer": "Gi·∫£m kho·∫£ng c√°ch t·ªõi t√¢m c·ª•m",
        "explanation": "M·ª•c ti√™u ch√≠nh c·ªßa K-means l√† gi·∫£m t·ªïng kho·∫£ng c√°ch ƒëi·ªÉm t·ªõi t√¢m c·ª•m."
    },
    {
        "question": "DBSCAN x·ª≠ l√Ω ngo·∫°i lai nh∆∞ th·∫ø n√†o so v·ªõi K-means?",
        "options": ["ƒê√°nh d·∫•u ngo·∫°i lai l√† nhi·ªÖu", "G√°n ngo·∫°i lai v√†o c·ª•m", "X·ª≠ l√Ω ngo·∫°i lai gi·ªëng nhau", "Ti·ªÅn x·ª≠ l√Ω ngo·∫°i lai"],
        "answer": "ƒê√°nh d·∫•u ngo·∫°i lai l√† nhi·ªÖu",
        "explanation": "DBSCAN ƒë√°nh d·∫•u ƒëi·ªÉm nhi·ªÖu thay v√¨ g√°n ch√∫ng v√†o c·ª•m."
    },
    {
        "question": "Lo·∫°i li√™n k·∫øt n√†o trong Agglomerative Clustering t·∫°o ra c√°c c·ª•m ch·∫∑t ch·∫Ω?",
        "options": ["Single linkage", "Complete linkage", "Average linkage", "Centroid linkage"],
        "answer": "Complete linkage",
        "explanation": "Complete linkage t·∫°o c·ª•m ch·∫∑t ch·∫Ω h∆°n so v·ªõi single linkage."
    },
    {
        "question": "ƒêi·ªÅu g√¨ ƒë·ªãnh nghƒ©a ph√¢n c·ª•m DBSCAN?",
        "options": ["S·ªë c·ª•m c·ªë ƒë·ªãnh", "C·ª•m d·ª±a tr√™n t√¢m", "H√¨nh d·∫°ng c·ª•m d·ª±a tr√™n m·∫≠t ƒë·ªô", "Li√™n k·∫øt ph√¢n c·∫•p c·ª•m"],
        "answer": "H√¨nh d·∫°ng c·ª•m d·ª±a tr√™n m·∫≠t ƒë·ªô",
        "explanation": "DBSCAN d·ª±a v√†o m·∫≠t ƒë·ªô ƒëi·ªÉm ƒë·ªÉ x√°c ƒë·ªãnh c·ª•m c√≥ h√¨nh d·∫°ng ph·ª©c t·∫°p."
    },
    {
        "question": "T·∫°i sao c·ª•m K-means b·ªã l·ªách b·ªüi ngo·∫°i lai?",
        "options": ["C·ª•m kh√¥ng h√¨nh c·∫ßu", "Ti√™u ch√≠ li√™n k·∫øt sai", "S·ªë c·ª•m th·∫•p", "Ngo·∫°i lai l√†m l·ªách t√¢m c·ª•m"],
        "answer": "Ngo·∫°i lai l√†m l·ªách t√¢m c·ª•m",
        "explanation": "Ngo·∫°i lai l√†m l·ªách t√¢m c·ª•m trong K-means d·∫´n ƒë·∫øn k·∫øt qu·∫£ kh√¥ng ch√≠nh x√°c."
    },
    {
        "question": "Agglomerative Clustering t·∫°o ra k·∫øt qu·∫£ g√¨?",
        "options": ["C·ª•m v·ªõi t√¢m c·ªë ƒë·ªãnh", "M·ªôt c·ª•m th·ªëng nh·∫•t", "C·ª•m d·ª±a tr√™n m·∫≠t ƒë·ªô", "C√¢y ph√¢n c·∫•p dendrogram"],
        "answer": "C√¢y ph√¢n c·∫•p dendrogram",
        "explanation": "Agglomerative Clustering t·∫°o c√¢y ph√¢n c·∫•p c·ª•m (dendrogram)."
    },
    {
        "question": "ƒê·ªÉ ph√°t hi·ªán nhi·ªÅu c·ª•m nh·ªè h∆°n trong DBSCAN, b·∫°n n√™n ƒëi·ªÅu ch·ªânh g√¨?",
        "options": ["TƒÉng s·ªë c·ª•m", "Gi·∫£m s·ªë ƒëi·ªÉm t·ªëi thi·ªÉu", "TƒÉng ng∆∞·ª°ng kho·∫£ng c√°ch", "S·ª≠ d·ª•ng li√™n k·∫øt ph√¢n c·∫•p"],
        "answer": "Gi·∫£m s·ªë ƒëi·ªÉm t·ªëi thi·ªÉu",
        "explanation": "Gi·∫£m s·ªë ƒëi·ªÉm t·ªëi thi·ªÉu ƒë·ªÉ ph√°t hi·ªán th√™m c√°c c·ª•m nh·ªè h∆°n."
    },
    {
        "question": "T·∫°i sao K-means ph·∫£i ch·ªâ ƒë·ªãnh s·ªë c·ª•m (K)?",
        "options": ["N√≥ g√°n ƒëi·ªÉm cho K t√¢m c·ª•m", "N√≥ d√πng ti√™u ch√≠ m·∫≠t ƒë·ªô", "N√≥ x√¢y d·ª±ng h·ªá th·ªëng ph√¢n c·∫•p c·ª•m", "N√≥ x√°c ƒë·ªãnh ƒëi·ªÉm nhi·ªÖu"],
        "answer": "N√≥ g√°n ƒëi·ªÉm cho K t√¢m c·ª•m",
        "explanation": "K-means c·∫ßn bi·∫øt tr∆∞·ªõc s·ªë c·ª•m ƒë·ªÉ g√°n ƒëi·ªÉm cho c√°c t√¢m c·ª•m."
    },
    {
        "question": "L√†m th·∫ø n√†o ƒë·ªÉ c·∫£i thi·ªán K-means ƒë·ªÉ ch·ªëng l·∫°i ngo·∫°i lai?",
        "options": ["D√πng trung v·ªã cho t√¢m c·ª•m", "D√πng li√™n k·∫øt ph√¢n c·∫•p", "T·ª± ƒë·ªông tƒÉng s·ªë c·ª•m", "Chuy·ªÉn sang ph√¢n c·ª•m m·∫≠t ƒë·ªô"],
        "answer": "Chuy·ªÉn sang ph√¢n c·ª•m m·∫≠t ƒë·ªô",
        "explanation": "Chuy·ªÉn sang thu·∫≠t to√°n d·ª±a tr√™n m·∫≠t ƒë·ªô nh∆∞ DBSCAN ƒë·ªÉ ch·ªëng nhi·ªÖu t·ªët h∆°n."
    }
]

# Ph·∫ßn 3: Gi·∫£m chi·ªÅu d·ªØ li·ªáu
dimred_questions = [
    {
        "question": "PCA bi·∫øn ƒë·ªïi d·ªØ li·ªáu th√†nh t·∫≠p h·ª£p m·ªõi g·ªìm:",
        "options": ["ƒê·∫∑c tr∆∞ng t∆∞∆°ng quan", "Bi·∫øn g·ªëc", "ƒê·∫∑c tr∆∞ng ƒë·ªôc l·∫≠p", "Th√†nh ph·∫ßn tr·ª±c giao"],
        "answer": "Th√†nh ph·∫ßn tr·ª±c giao",
        "explanation": "PCA bi·∫øn ƒë·ªïi d·ªØ li·ªáu th√†nh c√°c th√†nh ph·∫ßn tr·ª±c giao."
    },
    {
        "question": "t-SNE ch·ªß y·∫øu ƒë∆∞·ª£c d√πng ƒë·ªÉ:",
        "options": ["Ph√¢n lo·∫°i", "H·ªìi quy", "Gi·∫£m chi·ªÅu d·ªØ li·ªáu ƒë·ªÉ tr·ª±c quan h√≥a", "Ch·ªçn ƒë·∫∑c tr∆∞ng"],
        "answer": "Gi·∫£m chi·ªÅu d·ªØ li·ªáu ƒë·ªÉ tr·ª±c quan h√≥a",
        "explanation": "t-SNE ch·ªß y·∫øu ƒë∆∞·ª£c d√πng ƒë·ªÉ gi·∫£m chi·ªÅu d·ªØ li·ªáu ph·ª•c v·ª• tr·ª±c quan h√≥a."
    },
    {
        "question": "Autoencoders th∆∞·ªùng ƒë∆∞·ª£c hu·∫•n luy·ªán theo c√°ch n√†o?",
        "options": ["Kh√¥ng gi√°m s√°t", "C√≥ gi√°m s√°t", "TƒÉng c∆∞·ªùng", "B√°n gi√°m s√°t"],
        "answer": "Kh√¥ng gi√°m s√°t",
        "explanation": "Autoencoder th∆∞·ªùng ƒë∆∞·ª£c hu·∫•n luy·ªán kh√¥ng gi√°m s√°t."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o sau ƒë√¢y l√† ph∆∞∆°ng ph√°p l·ªçc ƒë·ªÉ ch·ªçn ƒë·∫∑c tr∆∞ng?",
        "options": ["Recursive Feature Elimination", "L1 Regularization", "Pearson Correlation Coefficient", "Forward Selection"],
        "answer": "Pearson Correlation Coefficient",
        "explanation": "Pearson l√† ph∆∞∆°ng ph√°p l·ªçc ƒë∆°n gi·∫£n ƒë·ªÉ ch·ªçn ƒë·∫∑c tr∆∞ng."
    },
    {
        "question": "K·ªπ thu·∫≠t n√†o lo·∫°i b·ªè ƒë·∫∑c tr∆∞ng b·∫±ng c√°ch xem x√©t ƒë·ªá quy c√°c t·∫≠p ƒë·∫∑c tr∆∞ng nh·ªè h∆°n?",
        "options": ["Forward Selection", "Backward Elimination", "PCA", "Recursive Feature Elimination"],
        "answer": "Recursive Feature Elimination",
        "explanation": "RFE lo·∫°i b·ªè c√°c ƒë·∫∑c tr∆∞ng √≠t quan tr·ªçng t·ª´ng b∆∞·ªõc m·ªôt c√°ch ƒë·ªá quy."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o kh√¥ng ph·∫£i l√† k·ªπ thu·∫≠t gi·∫£m chi·ªÅu?",
        "options": ["PCA", "t-SNE", "Lasso", "Decision Tree"],
        "answer": "Decision Tree",
        "explanation": "Decision Tree l√† m√¥ h√¨nh h·ªçc m√°y ch·ª© kh√¥ng ph·∫£i k·ªπ thu·∫≠t gi·∫£m chi·ªÅu."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p nh√∫ng (embedded) k·∫øt h·ª£p ch·ªçn ƒë·∫∑c tr∆∞ng v·ªõi:",
        "options": ["Tr·ª±c quan h√≥a d·ªØ li·ªáu", "Bi·∫øn ƒë·ªïi ƒë·∫∑c tr∆∞ng", "Hu·∫•n luy·ªán m√¥ h√¨nh", "Chu·∫©n h√≥a d·ªØ li·ªáu"],
        "answer": "Hu·∫•n luy·ªán m√¥ h√¨nh",
        "explanation": "Embedded methods k·∫øt h·ª£p ch·ªçn ƒë·∫∑c tr∆∞ng trong qu√° tr√¨nh hu·∫•n luy·ªán m√¥ h√¨nh."
    },
    {
        "question": "L1 regularization ch·ªß y·∫øu ƒë∆∞·ª£c d√πng ƒë·ªÉ:",
        "options": ["Gi·∫£m overfitting b·∫±ng c√°ch ph·∫°t tr·ªçng s·ªë l·ªõn", "Khuy·∫øn kh√≠ch ƒë·ªô th∆∞a b·∫±ng c√°ch ƒë·∫∑t m·ªôt s·ªë h·ªá s·ªë v·ªÅ 0", "Lo·∫°i b·ªè ƒëa c·ªông tuy·∫øn", "TƒÉng ƒë·ªô ph·ª©c t·∫°p m√¥ h√¨nh"],
        "answer": "Khuy·∫øn kh√≠ch ƒë·ªô th∆∞a b·∫±ng c√°ch ƒë·∫∑t m·ªôt s·ªë h·ªá s·ªë v·ªÅ 0",
        "explanation": "L1 gi√∫p ch·ªçn ƒë·∫∑c tr∆∞ng b·∫±ng c√°ch ƒë∆∞a m·ªôt s·ªë tr·ªçng s·ªë v·ªÅ 0."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o t·∫≠p trung v√†o gi·∫£m chi·ªÅu phi tuy·∫øn?",
        "options": ["PCA", "L1 Regularization", "t-SNE", "Forward Selection"],
        "answer": "t-SNE",
        "explanation": "t-SNE l√† k·ªπ thu·∫≠t gi·∫£m chi·ªÅu phi tuy·∫øn d√πng cho tr·ª±c quan h√≥a d·ªØ li·ªáu ph·ª©c t·∫°p."
    },
    {
        "question": "Autoencoders h·ªçc gi·∫£m chi·ªÅu b·∫±ng c√°ch:",
        "options": ["Ph√¢n c·ª•m c√°c ƒë·∫∑c tr∆∞ng t∆∞∆°ng t·ª±", "D√πng ph√©p chi·∫øu tuy·∫øn t√≠nh", "Gi·∫£m thi·ªÉu l·ªói t√°i t·∫°o", "T·ªëi ƒëa h√≥a ƒë·ªô ch√≠nh x√°c ph√¢n lo·∫°i"],
        "answer": "Gi·∫£m thi·ªÉu l·ªói t√°i t·∫°o",
        "explanation": "Autoencoder h·ªçc n√©n b·∫±ng c√°ch gi·∫£m l·ªói t√°i t·∫°o."
    },
    {
        "question": "So v·ªõi PCA, t-SNE ph√π h·ª£p h∆°n ƒë·ªÉ:",
        "options": ["T·∫≠p d·ªØ li·ªáu l·ªõn", "Th√†nh ph·∫ßn c√≥ th·ªÉ gi·∫£i th√≠ch", "Tr·ª±c quan h√≥a c·ª•m ƒëa chi·ªÅu", "X·∫øp h·∫°ng ƒë·∫∑c tr∆∞ng"],
        "answer": "Tr·ª±c quan h√≥a c·ª•m ƒëa chi·ªÅu",
        "explanation": "t-SNE th∆∞·ªùng d√πng ƒë·ªÉ tr·ª±c quan h√≥a c·ª•m trong kh√¥ng gian cao chi·ªÅu."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p ƒëi·ªÅu chu·∫©n n√†o l√†m nh·ªè t·∫•t c·∫£ h·ªá s·ªë nh∆∞ng hi·∫øm khi ƒë·∫∑t ch√∫ng v·ªÅ ƒë√∫ng 0?",
        "options": ["L1 Regularization", "L2 Regularization", "Forward Selection", "Recursive Feature Elimination"],
        "answer": "L2 Regularization",
        "explanation": "L2 l√†m nh·ªè tr·ªçng s·ªë ch·ª© kh√¥ng ƒë∆∞a v·ªÅ 0 nh∆∞ L1."
    },
    {
        "question": "M·ª•c ƒë√≠ch c·ªßa decoder trong autoencoder l√† g√¨?",
        "options": ["Gi·∫£m overfitting", "T·∫°o nhi·ªÖu", "T√°i t·∫°o d·ªØ li·ªáu ƒë·∫ßu v√†o", "Ch·ªçn ƒë·∫∑c tr∆∞ng quan tr·ªçng"],
        "answer": "T√°i t·∫°o d·ªØ li·ªáu ƒë·∫ßu v√†o",
        "explanation": "Decoder c·ªßa autoencoder t√°i t·∫°o l·∫°i ƒë·∫ßu v√†o t·ª´ vector m√£ h√≥a."
    },
    {
        "question": "Autoencoder g·ªìm hai ph·∫ßn ch√≠nh n√†o?",
        "options": ["Predictor v√† Transformer", "Encoder v√† Decoder", "Feature Selector v√† Reconstructor", "Generator v√† Discriminator"],
        "answer": "Encoder v√† Decoder",
        "explanation": "Autoencoder g·ªìm ph·∫ßn m√£ h√≥a (encoder) v√† gi·∫£i m√£ (decoder)."
    },
    {
        "question": "Trong PCA, th√†nh ph·∫ßn ch√≠nh ƒë·∫ßu ti√™n n·∫Øm gi·ªØ:",
        "options": ["Ph∆∞∆°ng sai nh·ªè nh·∫•t trong d·ªØ li·ªáu", "Trung b√¨nh c·ªßa c√°c ƒë·∫∑c tr∆∞ng", "Ph∆∞∆°ng sai l·ªõn nh·∫•t trong d·ªØ li·ªáu", "T·ªïng ph∆∞∆°ng sai"],
        "answer": "Ph∆∞∆°ng sai l·ªõn nh·∫•t trong d·ªØ li·ªáu",
        "explanation": "Th√†nh ph·∫ßn ch√≠nh ƒë·∫ßu ti√™n gi·ªØ ph∆∞∆°ng sai l·ªõn nh·∫•t."
    },
    {
        "question": "Th√¥ng tin l·∫´n nhau (Mutual Information) ƒëo l∆∞·ªùng ƒëi·ªÅu g√¨?",
        "options": ["M·ªëi quan h·ªá tuy·∫øn t√≠nh gi·ªØa c√°c bi·∫øn", "Ch√™nh l·ªách trung b√¨nh gi·ªØa c√°c ƒë·∫∑c tr∆∞ng", "L∆∞·ª£ng th√¥ng tin chia s·∫ª gi·ªØa c√°c bi·∫øn", "Ph∆∞∆°ng sai gi·∫£i th√≠ch b·ªüi ƒë·∫∑c tr∆∞ng"],
        "answer": "L∆∞·ª£ng th√¥ng tin chia s·∫ª gi·ªØa c√°c bi·∫øn",
        "explanation": "MI ƒëo l∆∞·ª£ng th√¥ng tin chia s·∫ª gi·ªØa hai bi·∫øn."
    },
    {
        "question": "PCA gi·∫£ ƒë·ªãnh c√°c th√†nh ph·∫ßn l√†:",
        "options": ["Ph·ª• thu·ªôc tuy·∫øn t√≠nh", "Tr·ª±c giao v√† s·∫Øp x·∫øp theo ph∆∞∆°ng sai", "Ph√¢n lo·∫°i", "Chu·∫©n h√≥a v·ªÅ kho·∫£ng 0-1"],
        "answer": "Tr·ª±c giao v√† s·∫Øp x·∫øp theo ph∆∞∆°ng sai",
        "explanation": "PCA t·∫°o c√°c th√†nh ph·∫ßn ch√≠nh tr·ª±c giao v√† s·∫Øp x·∫øp theo m·ª©c ƒë·ªô ph∆∞∆°ng sai."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o b·∫Øt ƒë·∫ßu v·ªõi t·∫≠p ƒë·∫∑c tr∆∞ng r·ªóng v√† th√™m ƒë·∫∑c tr∆∞ng t·ª´ng b∆∞·ªõc?",
        "options": ["Backward Selection", "RFE", "Forward Selection", "Lasso"],
        "answer": "Forward Selection",
        "explanation": "Forward Selection b·∫Øt ƒë·∫ßu t·ª´ t·∫≠p r·ªóng v√† th√™m ƒë·∫∑c tr∆∞ng t·ª´ng b∆∞·ªõc."
    },
    {
        "question": "√ù t∆∞·ªüng ch√≠nh c·ªßa t-SNE l√† g√¨?",
        "options": ["Gi·ªØ c·∫•u tr√∫c to√†n c·ª•c", "T√¨m ph√©p chi·∫øu tuy·∫øn t√≠nh", "Gi·ªØ t∆∞∆°ng ƒë·ªìng c·ª•c b·ªô trong d·ªØ li·ªáu", "T·ªëi ƒëa h√≥a ph∆∞∆°ng sai"],
        "answer": "Gi·ªØ t∆∞∆°ng ƒë·ªìng c·ª•c b·ªô trong d·ªØ li·ªáu",
        "explanation": "t-SNE t·∫≠p trung gi·ªØ l·∫°i s·ª± t∆∞∆°ng ƒë·ªìng c·ª•c b·ªô trong d·ªØ li·ªáu."
    },
    {
        "question": "Encoder trong autoencoder l√†m g√¨?",
        "options": ["Th√™m nhi·ªÖu v√†o d·ªØ li·ªáu", "TƒÉng chi·ªÅu d·ªØ li·ªáu", "N√©n ƒë·∫ßu v√†o th√†nh bi·ªÉu di·ªÖn chi·ªÅu th·∫•p h∆°n", "D·ª± ƒëo√°n nh√£n l·ªõp"],
        "answer": "N√©n ƒë·∫ßu v√†o th√†nh bi·ªÉu di·ªÖn chi·ªÅu th·∫•p h∆°n",
        "explanation": "Encoder m√£ h√≥a ƒë·∫ßu v√†o th√†nh bi·ªÉu di·ªÖn c√≥ chi·ªÅu th·∫•p h∆°n."
    }
]

# Ph·∫ßn 4: H·ªìi quy Tuy·∫øn t√≠nh v√† Normal Equation
linear_regression_questions = [
    {
        "question": "ƒêi·ªÅu ki·ªán n√†o c·∫ßn thi·∫øt ƒë·ªÉ Normal Equation c√≥ th·ªÉ t√≠nh to√°n ƒë∆∞·ª£c?",
        "options": ["Ma tr·∫≠n X^TX ph·∫£i l√† m·ªôt ma tr·∫≠n vu√¥ng kh·∫£ ngh·ªãch (c√≥ ƒë·ªãnh th·ª©c kh√°c 0)", 
                    "S·ªë l∆∞·ª£ng bi·∫øn ƒë·∫ßu v√†o lu√¥n ph·∫£i nh·ªè h∆°n s·ªë m·∫´u d·ªØ li·ªáu", 
                    "Gi√° tr·ªã ƒë·∫ßu ra y ph·∫£i c√≥ ph√¢n ph·ªëi chu·∫©n", 
                    "Kh√¥ng c√≥ ƒëi·ªÅu ki·ªán n√†o, Normal Equation lu√¥n c√≥ th·ªÉ t√≠nh to√°n ƒë∆∞·ª£c"],
        "answer": "Ma tr·∫≠n X^TX ph·∫£i l√† m·ªôt ma tr·∫≠n vu√¥ng kh·∫£ ngh·ªãch (c√≥ ƒë·ªãnh th·ª©c kh√°c 0)",
        "explanation": "Normal Equation y√™u c·∫ßu ma tr·∫≠n X^TX kh·∫£ ngh·ªãch ƒë·ªÉ gi·∫£i ƒë∆∞·ª£c h·ªá ph∆∞∆°ng tr√¨nh tuy·∫øn t√≠nh."
    },
    {
        "question": "Normal Equation l√† g√¨?",
        "options": ["M·ªôt ph∆∞∆°ng ph√°p t·ªëi ∆∞u h√≥a h·ªìi quy tuy·∫øn t√≠nh b·∫±ng c√°ch l·∫∑p li√™n t·ª•c ƒë·ªÉ c·∫≠p nh·∫≠t tr·ªçng s·ªë", 
                    "M·ªôt ph∆∞∆°ng ph√°p t√≠nh to√°n tr·ªçng s·ªë t·ªëi ∆∞u trong h·ªìi quy tuy·∫øn t√≠nh b·∫±ng c√°ch gi·∫£i h·ªá ph∆∞∆°ng tr√¨nh tuy·∫øn t√≠nh", 
                    "M·ªôt ph∆∞∆°ng ph√°p chu·∫©n h√≥a d·ªØ li·ªáu tr∆∞·ªõc khi √°p d·ª•ng h·ªìi quy tuy·∫øn t√≠nh", 
                    "M·ªôt ph∆∞∆°ng ph√°p s·ª≠ d·ª•ng c√¢y quy·∫øt ƒë·ªãnh ƒë·ªÉ d·ª± ƒëo√°n bi·∫øn m·ª•c ti√™u"],
        "answer": "M·ªôt ph∆∞∆°ng ph√°p t√≠nh to√°n tr·ªçng s·ªë t·ªëi ∆∞u trong h·ªìi quy tuy·∫øn t√≠nh b·∫±ng c√°ch gi·∫£i h·ªá ph∆∞∆°ng tr√¨nh tuy·∫øn t√≠nh",
        "explanation": "Normal Equation gi·∫£i tr·ª±c ti·∫øp h·ªá ph∆∞∆°ng tr√¨nh ƒë·ªÉ t√¨m tr·ªçng s·ªë t·ªëi ∆∞u m√† kh√¥ng c·∫ßn l·∫∑p."
    },
    {
        "question": "Trong Normal Equation, n·∫øu s·ªë m·∫´u d·ªØ li·ªáu m l·ªõn h∆°n s·ªë l∆∞·ª£ng bi·∫øn n, ƒëi·ªÅu g√¨ c√≥ th·ªÉ x·∫£y ra?",
        "options": ["Ma tr·∫≠n X^TX lu√¥n kh·∫£ ngh·ªãch", "Ma tr·∫≠n X^TX kh√¥ng kh·∫£ ngh·ªãch", 
                    "Normal Equation kh√¥ng th·ªÉ s·ª≠ d·ª•ng ƒë∆∞·ª£c", "Kh√¥ng c√≥ g√¨ ƒë·∫∑c bi·ªát x·∫£y ra"],
        "answer": "Ma tr·∫≠n X^TX lu√¥n kh·∫£ ngh·ªãch",
        "explanation": "Khi m > n v√† c√°c c·ªôt c·ªßa X ƒë·ªôc l·∫≠p tuy·∫øn t√≠nh, X^TX th∆∞·ªùng kh·∫£ ngh·ªãch."
    },
    {
        "question": "Normal Equation c√≥ th·ªÉ ho·∫°t ƒë·ªông t·ªët v·ªõi d·ªØ li·ªáu l·ªõn kh√¥ng?",
        "options": ["C√≥, v√¨ n√≥ kh√¥ng c·∫ßn tuning hyperparameters nh∆∞ Gradient Descent", 
                    "Kh√¥ng, v√¨ n√≥ ƒë√≤i h·ªèi t√≠nh to√°n ngh·ªãch ƒë·∫£o ma tr·∫≠n (X^TX)^{‚àí1} c√≥ ƒë·ªô ph·ª©c t·∫°p O(n^3)", 
                    "C√≥, v√¨ n√≥ nhanh h∆°n Gradient Descent trong m·ªçi tr∆∞·ªùng h·ª£p", 
                    "Kh√¥ng, v√¨ n√≥ ch·ªâ √°p d·ª•ng ƒë∆∞·ª£c cho b√†i to√°n ph√¢n lo·∫°i"],
        "answer": "Kh√¥ng, v√¨ n√≥ ƒë√≤i h·ªèi t√≠nh to√°n ngh·ªãch ƒë·∫£o ma tr·∫≠n (X^TX)^{‚àí1} c√≥ ƒë·ªô ph·ª©c t·∫°p O(n^3)",
        "explanation": "Vi·ªác t√≠nh ngh·ªãch ƒë·∫£o ma tr·∫≠n c√≥ ƒë·ªô ph·ª©c t·∫°p cao, khi·∫øn Normal Equation kh√¥ng hi·ªáu qu·∫£ v·ªõi d·ªØ li·ªáu l·ªõn."
    }
]

# Ph·∫ßn 5: Gradient Descent
gradient_descent_questions = [
    {
        "question": "N·∫øu t·ªëc ƒë·ªô h·ªçc qu√° nh·ªè, qu√° tr√¨nh h·ªôi t·ª• c·ªßa Gradient Descent s·∫Ω r·∫•t ch·∫≠m.",
        "options": ["True", "False"],
        "answer": "True",
        "explanation": "T·ªëc ƒë·ªô h·ªçc nh·ªè l√†m c√°c b∆∞·ªõc c·∫≠p nh·∫≠t nh·ªè, d·∫´n ƒë·∫øn h·ªôi t·ª• ch·∫≠m."
    },
    {
        "question": "Gradient Descent ho·∫°t ƒë·ªông b·∫±ng c√°ch c·∫≠p nh·∫≠t li√™n t·ª•c c√°c h·ªá s·ªë d·ª±a tr√™n ƒë·∫°o h√†m c·ªßa h√†m m·∫•t m√°t.",
        "options": ["True", "False"],
        "answer": "True",
        "explanation": "Gradient Descent s·ª≠ d·ª•ng ƒë·∫°o h√†m ƒë·ªÉ ƒëi·ªÅu ch·ªânh h·ªá s·ªë theo h∆∞·ªõng gi·∫£m h√†m m·∫•t m√°t."
    },
    {
        "question": "Gradient Descent lu√¥n h·ªôi t·ª• v·ªÅ m·ªôt nghi·ªám duy nh·∫•t b·∫•t k·ªÉ learning rate (t·ªëc ƒë·ªô h·ªçc) ƒë∆∞·ª£c ch·ªçn nh∆∞ th·∫ø n√†o.",
        "options": ["True", "False"],
        "answer": "False",
        "explanation": "T·ªëc ƒë·ªô h·ªçc kh√¥ng ph√π h·ª£p c√≥ th·ªÉ khi·∫øn Gradient Descent kh√¥ng h·ªôi t·ª• ho·∫∑c dao ƒë·ªông."
    },
    {
        "question": "M·ª•c ti√™u ch√≠nh c·ªßa thu·∫≠t to√°n Gradient Descent l√† g√¨?",
        "options": ["T√¨m nghi·ªám ch√≠nh x√°c c·ªßa ph∆∞∆°ng tr√¨nh h·ªìi quy", 
                    "T√¨m c·ª±c ti·ªÉu c·ªßa h√†m l·ªói ƒë·ªÉ t·ªëi ∆∞u h√≥a c√°c h·ªá s·ªë c·ªßa m√¥ h√¨nh", 
                    "TƒÉng t·ªëc ƒë·ªô d·ª± ƒëo√°n c·ªßa m√¥ h√¨nh", 
                    "Gi·∫£m thi·ªÉu s·ªë l∆∞·ª£ng bi·∫øn trong m√¥ h√¨nh"],
        "answer": "T√¨m c·ª±c ti·ªÉu c·ªßa h√†m l·ªói ƒë·ªÉ t·ªëi ∆∞u h√≥a c√°c h·ªá s·ªë c·ªßa m√¥ h√¨nh",
        "explanation": "Gradient Descent t·ªëi ∆∞u h√≥a h·ªá s·ªë b·∫±ng c√°ch gi·∫£m d·∫ßn h√†m m·∫•t m√°t."
    },
    {
        "question": "H√†m m·∫•t m√°t n√†o th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng trong Gradient Descent cho h·ªìi quy tuy·∫øn t√≠nh ƒë∆°n?",
        "options": ["Mean Absolute Error (MAE)", "Root Mean Squared Error (RMSE)", 
                    "Mean Squared Error (MSE)", "Hinge Loss"],
        "answer": "Mean Squared Error (MSE)",
        "explanation": "MSE th∆∞·ªùng ƒë∆∞·ª£c d√πng v√¨ n√≥ c√≥ ƒë·∫°o h√†m li√™n t·ª•c, ph√π h·ª£p v·ªõi Gradient Descent."
    },
    {
        "question": "Gradient Descent s·∫Ω h·ªôi t·ª• nhanh h∆°n n·∫øu:",
        "options": ["D·ªØ li·ªáu c√≥ ph∆∞∆°ng sai cao", 
                    "T·ªëc ƒë·ªô h·ªçc ƒë∆∞·ª£c tƒÉng l√™n m√† kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn ƒë·ªô ·ªïn ƒë·ªãnh", 
                    "S·ªë l·∫ßn l·∫∑p gi·∫£m", 
                    "H√†m m·∫•t m√°t c√≥ d·∫°ng phi tuy·∫øn t√≠nh"],
        "answer": "T·ªëc ƒë·ªô h·ªçc ƒë∆∞·ª£c tƒÉng l√™n m√† kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn ƒë·ªô ·ªïn ƒë·ªãnh",
        "explanation": "TƒÉng t·ªëc ƒë·ªô h·ªçc h·ª£p l√Ω gi√∫p h·ªôi t·ª• nhanh h∆°n m√† v·∫´n ·ªïn ƒë·ªãnh."
    },
    {
        "question": "Gradient c·ªßa h√†m m·∫•t m√°t ƒë∆∞·ª£c t√≠nh nh∆∞ th·∫ø n√†o trong thu·∫≠t to√°n Gradient Descent?",
        "options": ["L√† t·ªïng b√¨nh ph∆∞∆°ng c·ªßa c√°c sai s·ªë", 
                    "L√† ƒë·ªô d·ªëc c·ªßa h√†m l·ªói ƒë·ªëi v·ªõi c√°c h·ªá s·ªë w0 v√† w1", 
                    "L√† kho·∫£ng c√°ch gi·ªØa gi√° tr·ªã d·ª± ƒëo√°n v√† gi√° tr·ªã th·ª±c t·∫ø", 
                    "L√† t·ªïng c√°c ƒë·∫°o h√†m b·∫≠c hai c·ªßa h√†m l·ªói"],
        "answer": "L√† ƒë·ªô d·ªëc c·ªßa h√†m l·ªói ƒë·ªëi v·ªõi c√°c h·ªá s·ªë w0 v√† w1",
        "explanation": "Gradient l√† ƒë·∫°o h√†m ri√™ng c·ªßa h√†m m·∫•t m√°t theo c√°c tham s·ªë."
    },
    {
        "question": "N·∫øu t·ªëc ƒë·ªô h·ªçc (learning rate) ƒë∆∞·ª£c ch·ªçn qu√° l·ªõn, ƒëi·ªÅu g√¨ c√≥ th·ªÉ x·∫£y ra trong qu√° tr√¨nh Gradient Descent?",
        "options": ["M√¥ h√¨nh s·∫Ω h·ªôi t·ª• nhanh h∆°n", 
                    "M√¥ h√¨nh s·∫Ω m·∫Øc k·∫πt trong c·ª±c tr·ªã c·ª•c b·ªô", 
                    "M√¥ h√¨nh c√≥ th·ªÉ dao ƒë·ªông xung quanh nghi·ªám ho·∫∑c kh√¥ng h·ªôi t·ª•", 
                    "M√¥ h√¨nh s·∫Ω t·ªëi ∆∞u h√≥a sai s·ªë m·ªôt c√°ch ch√≠nh x√°c"],
        "answer": "M√¥ h√¨nh c√≥ th·ªÉ dao ƒë·ªông xung quanh nghi·ªám ho·∫∑c kh√¥ng h·ªôi t·ª•",
        "explanation": "T·ªëc ƒë·ªô h·ªçc l·ªõn g√¢y b∆∞·ªõc nh·∫£y qu√° d√†i, d·∫´n ƒë·∫øn dao ƒë·ªông ho·∫∑c kh√¥ng h·ªôi t·ª•."
    },
    {
        "question": "Gradient Descent c√≥ th·ªÉ b·ªã m·∫Øc k·∫πt ·ªü c√°c c·ª±c tr·ªã c·ª•c b·ªô khi √°p d·ª•ng cho b√†i to√°n h·ªìi quy tuy·∫øn t√≠nh ƒë∆°n.",
        "options": ["True", "False"],
        "answer": "False",
        "explanation": "H·ªìi quy tuy·∫øn t√≠nh ƒë∆°n c√≥ h√†m m·∫•t m√°t l·ªìi, kh√¥ng c√≥ c·ª±c tr·ªã c·ª•c b·ªô."
    },
    {
        "question": "Thu·∫≠t to√°n Gradient Descent ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ t√¨m c√°c h·ªá s·ªë t·ªëi ∆∞u w0 v√† w1 trong h·ªìi quy tuy·∫øn t√≠nh.",
        "options": ["True", "False"],
        "answer": "True",
        "explanation": "Gradient Descent t·ªëi ∆∞u h√≥a w0 v√† w1 ƒë·ªÉ gi·∫£m sai s·ªë d·ª± ƒëo√°n."
    },
    {
        "question": "Trong thu·∫≠t to√°n Gradient Descent, ph∆∞∆°ng sai c·ªßa d·ªØ li·ªáu kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn t·ªëc ƒë·ªô h·ªôi t·ª•.",
        "options": ["True", "False"],
        "answer": "False",
        "explanation": "Ph∆∞∆°ng sai l·ªõn c√≥ th·ªÉ l√†m Gradient Descent h·ªôi t·ª• ch·∫≠m h∆°n n·∫øu kh√¥ng chu·∫©n h√≥a."
    }
]

# Ph·∫ßn 6: Mini-batch, Stochastic, Batch Gradient Descent
gradient_variants_questions = [
    {
        "question": "N·∫øu k√≠ch th∆∞·ªõc batch b·∫±ng 1, Mini-batch Gradient Descent s·∫Ω tr·ªü th√†nh ph∆∞∆°ng ph√°p n√†o?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "Kh√¥ng thay ƒë·ªïi"],
        "answer": "Stochastic Gradient Descent",
        "explanation": "Batch size = 1 nghƒ©a l√† c·∫≠p nh·∫≠t gradient tr√™n t·ª´ng m·∫´u, t·ª©c l√† Stochastic GD."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o cung c·∫•p ∆∞·ªõc l∆∞·ª£ng gradient ch√≠nh x√°c nh·∫•t cho m·ªói l·∫ßn c·∫≠p nh·∫≠t tham s·ªë?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "T·∫•t c·∫£ ƒë·ªÅu nh∆∞ nhau"],
        "answer": "Batch Gradient Descent",
        "explanation": "Batch GD d√πng to√†n b·ªô d·ªØ li·ªáu, cho gradient ch√≠nh x√°c nh·∫•t m·ªói l·∫ßn c·∫≠p nh·∫≠t."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o d∆∞·ªõi ƒë√¢y s·ª≠ d·ª•ng to√†n b·ªô t·∫≠p d·ªØ li·ªáu ƒë·ªÉ t√≠nh gradient trong m·ªói l·∫ßn l·∫∑p?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "Adaptive Gradient Descent"],
        "answer": "Batch Gradient Descent",
        "explanation": "Batch GD t√≠nh gradient tr√™n to√†n b·ªô t·∫≠p d·ªØ li·ªáu m·ªói l·∫ßn l·∫∑p."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o nh·∫°y c·∫£m nh·∫•t v·ªõi vi·ªác ch·ªçn learning rate kh√¥ng ph√π h·ª£p?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "Kh√¥ng c√≥ s·ª± kh√°c bi·ªát"],
        "answer": "Stochastic Gradient Descent",
        "explanation": "Stochastic GD nh·∫°y c·∫£m h∆°n do gradient dao ƒë·ªông l·ªõn t·ª´ t·ª´ng m·∫´u."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o t·∫≠n d·ª•ng t·ªët nh·∫•t kh·∫£ nƒÉng t√≠nh to√°n song song tr√™n ph·∫ßn c·ª©ng nh∆∞ GPU?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "Gradient Descent v·ªõi learning rate th√≠ch nghi"],
        "answer": "Mini-batch Gradient Descent",
        "explanation": "Mini-batch GD c√¢n b·∫±ng gi·ªØa t·ªëc ƒë·ªô v√† kh·∫£ nƒÉng song song tr√™n GPU."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o v·ª´a nhanh h∆°n Batch Gradient Descent, v·ª´a ·ªïn ƒë·ªãnh h∆°n Stochastic Gradient Descent?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "Batch Gradient Descent v·ªõi learning rate nh·ªè"],
        "answer": "Mini-batch Gradient Descent",
        "explanation": "Mini-batch GD k·∫øt h·ª£p ∆∞u ƒëi·ªÉm c·ªßa c·∫£ hai ph∆∞∆°ng ph√°p."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o c·∫≠p nh·∫≠t tham s·ªë d·ª±a tr√™n gradient c·ªßa m·ªôt m·∫´u d·ªØ li·ªáu ng·∫´u nhi√™n duy nh·∫•t trong m·ªói l·∫ßn l·∫∑p?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "Gradient Descent v·ªõi momentum"],
        "answer": "Stochastic Gradient Descent",
        "explanation": "Stochastic GD d√πng m·ªôt m·∫´u ng·∫´u nhi√™n m·ªói l·∫ßn c·∫≠p nh·∫≠t."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o ƒë√≤i h·ªèi √≠t b·ªô nh·ªõ nh·∫•t trong qu√° tr√¨nh t√≠nh to√°n gradient?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "T·∫•t c·∫£ ƒë·ªÅu nh∆∞ nhau"],
        "answer": "Stochastic Gradient Descent",
        "explanation": "Stochastic GD ch·ªâ c·∫ßn l∆∞u gradient cho m·ªôt m·∫´u m·ªói l·∫ßn."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p Gradient Descent n√†o th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng trong c√°c m·∫°ng n∆°-ron s√¢u ƒë·ªÉ hu·∫•n luy·ªán tr√™n d·ªØ li·ªáu l·ªõn?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "Gradient Descent v·ªõi b∆∞·ªõc nh·∫£y c·ªë ƒë·ªãnh"],
        "answer": "Mini-batch Gradient Descent",
        "explanation": "Mini-batch GD hi·ªáu qu·∫£ v√† ph√π h·ª£p v·ªõi d·ªØ li·ªáu l·ªõn trong deep learning."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o c√≥ th·ªÉ kh√¥ng h·ªôi t·ª• ch√≠nh x√°c ƒë·∫øn ƒëi·ªÉm t·ªëi ∆∞u to√†n c·ª•c m√† dao ƒë·ªông quanh n√≥?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "C·∫£ Batch GD v√† Mini-batch GD"],
        "answer": "Stochastic Gradient Descent",
        "explanation": "Stochastic GD dao ƒë·ªông do gradient d·ª±a tr√™n m·∫´u ng·∫´u nhi√™n."
    },
    {
        "question": "N·∫øu k√≠ch th∆∞·ªõc batch b·∫±ng s·ªë m·∫´u trong t·∫≠p d·ªØ li·ªáu, Mini-batch Gradient Descent s·∫Ω tr·ªü th√†nh ph∆∞∆°ng ph√°p n√†o?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "Kh√¥ng thay ƒë·ªïi"],
        "answer": "Batch Gradient Descent",
        "explanation": "Batch size b·∫±ng k√≠ch th∆∞·ªõc d·ªØ li·ªáu bi·∫øn Mini-batch GD th√†nh Batch GD."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p Gradient Descent n√†o th∆∞·ªùng ch·∫≠m nh·∫•t khi t·∫≠p d·ªØ li·ªáu r·∫•t l·ªõn?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "T·∫•t c·∫£ ƒë·ªÅu nh∆∞ nhau"],
        "answer": "Batch Gradient Descent",
        "explanation": "Batch GD ch·∫≠m v√¨ ph·∫£i t√≠nh gradient tr√™n to√†n b·ªô d·ªØ li·ªáu m·ªói l·∫ßn l·∫∑p."
    },
    {
        "question": "Ph∆∞∆°ng ph√°p n√†o c√≥ qu√° tr√¨nh h·ªôi t·ª• ·ªïn ƒë·ªãnh nh·∫•t (√≠t dao ƒë·ªông nh·∫•t)?",
        "options": ["Stochastic Gradient Descent", "Mini-batch Gradient Descent", "Batch Gradient Descent", "T·∫•t c·∫£ ƒë·ªÅu nh∆∞ nhau"],
        "answer": "Batch Gradient Descent",
        "explanation": "Batch GD ·ªïn ƒë·ªãnh nh·∫•t do d√πng to√†n b·ªô d·ªØ li·ªáu ƒë·ªÉ t√≠nh gradient."
    }
]

# Ph·∫ßn 7: Multiple Linear Regression
multiple_regression_questions = [
    {
        "question": "Trong tr∆∞·ªùng h·ª£p n√†o Adjusted R2 c√≥ th·ªÉ √¢m?",
        "options": ["Khi m√¥ h√¨nh gi·∫£i th√≠ch t·ªët h∆°n gi√° tr·ªã trung b√¨nh", 
                    "Khi m√¥ h√¨nh k√©m h∆°n so v·ªõi ch·ªâ d√πng gi√° tr·ªã trung b√¨nh c·ªßa y", 
                    "Khi R2 l·ªõn h∆°n 1", 
                    "Khi t·∫•t c·∫£ bi·∫øn ƒë·ªôc l·∫≠p kh√¥ng t∆∞∆°ng quan"],
        "answer": "Khi m√¥ h√¨nh k√©m h∆°n so v·ªõi ch·ªâ d√πng gi√° tr·ªã trung b√¨nh c·ªßa y",
        "explanation": "Adjusted R2 √¢m khi m√¥ h√¨nh kh√¥ng gi·∫£i th√≠ch d·ªØ li·ªáu t·ªët h∆°n gi√° tr·ªã trung b√¨nh."
    },
    {
        "question": "N·∫øu SE c·ªßa m·ªôt h·ªá s·ªë w1 r·∫•t nh·ªè, ƒëi·ªÅu n√†y ng·ª• √Ω g√¨?",
        "options": ["w1 kh√¥ng quan tr·ªçng trong m√¥ h√¨nh", "w1 c√≥ ·∫£nh h∆∞·ªüng l·ªõn ƒë·∫øn y", 
                    "∆Ø·ªõc l∆∞·ª£ng c·ªßa w1 r·∫•t ch√≠nh x√°c", "R2 c·ªßa m√¥ h√¨nh r·∫•t cao"],
        "answer": "∆Ø·ªõc l∆∞·ª£ng c·ªßa w1 r·∫•t ch√≠nh x√°c",
        "explanation": "SE nh·ªè cho th·∫•y ƒë·ªô kh√¥ng ch·∫Øc ch·∫Øn th·∫•p, t·ª©c l√† ∆∞·ªõc l∆∞·ª£ng ch√≠nh x√°c."
    },
    {
        "question": "Khi n√†o Adjusted R2 nh·ªè h∆°n R2?",
        "options": ["Khi m√¥ h√¨nh c√≥ √≠t bi·∫øn ƒë·ªôc l·∫≠p", 
                    "Khi th√™m bi·∫øn kh√¥ng c·∫£i thi·ªán kh·∫£ nƒÉng gi·∫£i th√≠ch c·ªßa m√¥ h√¨nh", 
                    "Khi t·∫•t c·∫£ bi·∫øn ƒë·ªôc l·∫≠p ƒë·ªÅu kh√¥ng quan tr·ªçng", 
                    "Khi s·ªë l∆∞·ª£ng m·∫´u nh·ªè"],
        "answer": "Khi th√™m bi·∫øn kh√¥ng c·∫£i thi·ªán kh·∫£ nƒÉng gi·∫£i th√≠ch c·ªßa m√¥ h√¨nh",
        "explanation": "Adjusted R2 ph·∫°t khi th√™m bi·∫øn kh√¥ng h·ªØu √≠ch, l√†m n√≥ nh·ªè h∆°n R2."
    },
    {
        "question": "Multiple Linear Regression kh√°c v·ªõi Simple Linear Regression ·ªü ƒëi·ªÉm n√†o?",
        "options": ["Ch·ªâ c√≥ m·ªôt bi·∫øn ƒë·ªôc l·∫≠p", "C√≥ nhi·ªÅu bi·∫øn ƒë·ªôc l·∫≠p", 
                    "Kh√¥ng c√≥ h·ªá s·ªë ch·∫∑n (intercept)", "Ch·ªâ d·ª± ƒëo√°n gi√° tr·ªã ph√¢n lo·∫°i"],
        "answer": "C√≥ nhi·ªÅu bi·∫øn ƒë·ªôc l·∫≠p",
        "explanation": "Multiple Linear Regression s·ª≠ d·ª•ng nhi·ªÅu bi·∫øn ƒë·ªôc l·∫≠p, kh√¥ng ch·ªâ m·ªôt."
    },
    {
        "question": "N·∫øu R2 tƒÉng nh∆∞ng Adjusted R2 gi·∫£m khi th√™m m·ªôt bi·∫øn, ƒëi·ªÅu n√†y cho th·∫•y g√¨?",
        "options": ["Bi·∫øn m·ªõi kh√¥ng c·∫£i thi·ªán m√¥ h√¨nh ƒë√°ng k·ªÉ", "Bi·∫øn m·ªõi l√†m tƒÉng ƒë·ªô ch√≠nh x√°c d·ª± ƒëo√°n", 
                    "S·ªë l∆∞·ª£ng m·∫´u qu√° nh·ªè", "M√¥ h√¨nh b·ªã overfitting"],
        "answer": "Bi·∫øn m·ªõi kh√¥ng c·∫£i thi·ªán m√¥ h√¨nh ƒë√°ng k·ªÉ",
        "explanation": "Adjusted R2 gi·∫£m cho th·∫•y bi·∫øn m·ªõi kh√¥ng mang l·∫°i gi√° tr·ªã gi·∫£i th√≠ch ƒë√°ng k·ªÉ."
    },
    {
        "question": "Trong Multiple Linear Regression, h·ªá s·ªë ch·∫∑n (Œ≤0) ƒë·∫°i di·ªán cho ƒëi·ªÅu g√¨?",
        "options": ["ƒê·ªô d·ªëc c·ªßa m·ªôt bi·∫øn ƒë·ªôc l·∫≠p", "Gi√° tr·ªã d·ª± ƒëo√°n khi t·∫•t c·∫£ bi·∫øn ƒë·ªôc l·∫≠p b·∫±ng 0", 
                    "Ph∆∞∆°ng sai c·ªßa sai s·ªë", "T·ª∑ l·ªá gi·∫£i th√≠ch c·ªßa m√¥ h√¨nh"],
        "answer": "Gi√° tr·ªã d·ª± ƒëo√°n khi t·∫•t c·∫£ bi·∫øn ƒë·ªôc l·∫≠p b·∫±ng 0",
        "explanation": "Œ≤0 l√† gi√° tr·ªã y khi t·∫•t c·∫£ bi·∫øn ƒë·ªôc l·∫≠p ƒë·ªÅu b·∫±ng 0."
    },
    {
        "question": "H·ªá s·ªë t∆∞∆°ng quan R trong Multiple Linear Regression ƒëo l∆∞·ªùng ƒëi·ªÅu g√¨?",
        "options": ["M·ª©c ƒë·ªô gi·∫£i th√≠ch c·ªßa m√¥ h√¨nh", "M·ªëi quan h·ªá tuy·∫øn t√≠nh gi·ªØa c√°c bi·∫øn ƒë·ªôc l·∫≠p v√† bi·∫øn ph·ª• thu·ªôc", 
                    "Ph∆∞∆°ng sai c·ªßa sai s·ªë", "ƒê·ªô ch√≠nh x√°c c·ªßa d·ª± ƒëo√°n"],
        "answer": "M·ªëi quan h·ªá tuy·∫øn t√≠nh gi·ªØa c√°c bi·∫øn ƒë·ªôc l·∫≠p v√† bi·∫øn ph·ª• thu·ªôc",
        "explanation": "R ƒëo s·ª©c m·∫°nh m·ªëi quan h·ªá tuy·∫øn t√≠nh gi·ªØa bi·∫øn ƒë·ªôc l·∫≠p v√† ph·ª• thu·ªôc."
    },
    {
        "question": "ƒêi·ªÅu g√¨ x·∫£y ra v·ªõi R2 khi th√™m m·ªôt bi·∫øn ƒë·ªôc l·∫≠p kh√¥ng li√™n quan v√†o m√¥ h√¨nh?",
        "options": ["R2 lu√¥n gi·∫£m", "R2 kh√¥ng ƒë·ªïi", "R2 lu√¥n tƒÉng ho·∫∑c kh√¥ng gi·∫£m", "R2 tr·ªü th√†nh √¢m"],
        "answer": "R2 lu√¥n tƒÉng ho·∫∑c kh√¥ng gi·∫£m",
        "explanation": "R2 kh√¥ng bao gi·ªù gi·∫£m khi th√™m bi·∫øn, ngay c·∫£ khi bi·∫øn kh√¥ng li√™n quan."
    },
    {
        "question": "R2 trong Multiple Linear Regression bi·ªÉu th·ªã ƒëi·ªÅu g√¨?",
        "options": ["T·ª∑ l·ªá ph∆∞∆°ng sai c·ªßa bi·∫øn ph·ª• thu·ªôc ƒë∆∞·ª£c gi·∫£i th√≠ch b·ªüi m√¥ h√¨nh", 
                    "ƒê·ªô ch√≠nh x√°c c·ªßa t·ª´ng tham s·ªë trong m√¥ h√¨nh", 
                    "T·ªïng sai s·ªë b√¨nh ph∆∞∆°ng", 
                    "S·ªë l∆∞·ª£ng bi·∫øn ƒë·ªôc l·∫≠p trong m√¥ h√¨nh"],
        "answer": "T·ª∑ l·ªá ph∆∞∆°ng sai c·ªßa bi·∫øn ph·ª• thu·ªôc ƒë∆∞·ª£c gi·∫£i th√≠ch b·ªüi m√¥ h√¨nh",
        "explanation": "R2 cho bi·∫øt ph·∫ßn trƒÉm bi·∫øn thi√™n c·ªßa y ƒë∆∞·ª£c gi·∫£i th√≠ch b·ªüi m√¥ h√¨nh."
    },
    {
        "question": "Adjusted R2 kh√°c v·ªõi R2 ·ªü ƒëi·ªÉm n√†o?",
        "options": ["N√≥ lu√¥n l·ªõn h∆°n R2", "N√≥ ƒëi·ªÅu ch·ªânh theo s·ªë l∆∞·ª£ng bi·∫øn ƒë·ªôc l·∫≠p trong m√¥ h√¨nh", 
                    "N√≥ ƒëo l∆∞·ªùng ƒë·ªô ch√≠nh x√°c c·ªßa d·ª± ƒëo√°n", "N√≥ kh√¥ng n·∫±m trong kho·∫£ng [0, 1]"],
        "answer": "N√≥ ƒëi·ªÅu ch·ªânh theo s·ªë l∆∞·ª£ng bi·∫øn ƒë·ªôc l·∫≠p trong m√¥ h√¨nh",
        "explanation": "Adjusted R2 ƒëi·ªÅu ch·ªânh R2 d·ª±a tr√™n s·ªë bi·∫øn ƒë·ªÉ tr√°nh tƒÉng gi·∫£ t·∫°o."
    },
    {
        "question": "Metric n√†o th∆∞·ªùng ƒë∆∞·ª£c d√πng ƒë·ªÉ so s√°nh c√°c m√¥ h√¨nh Multiple Linear Regression v·ªõi s·ªë l∆∞·ª£ng bi·∫øn ƒë·ªôc l·∫≠p kh√°c nhau?",
        "options": ["R", "R2", "Adjusted R2", "Standard Error c·ªßa m√¥ h√¨nh"],
        "answer": "Adjusted R2",
        "explanation": "Adjusted R2 ph√π h·ª£p ƒë·ªÉ so s√°nh m√¥ h√¨nh v·ªõi s·ªë bi·∫øn kh√°c nhau."
    },
    {
        "question": "N·∫øu R2=0.85, ƒëi·ªÅu n√†y c√≥ nghƒ©a l√† g√¨?",
        "options": ["85% sai s·ªë ƒë∆∞·ª£c gi·∫£i th√≠ch b·ªüi m√¥ h√¨nh", 
                    "85% bi·∫øn thi√™n c·ªßa bi·∫øn ph·ª• thu·ªôc ƒë∆∞·ª£c gi·∫£i th√≠ch b·ªüi c√°c bi·∫øn ƒë·ªôc l·∫≠p", 
                    "M√¥ h√¨nh c√≥ 85% ƒë·ªô ch√≠nh x√°c d·ª± ƒëo√°n", 
                    "C√≥ 85 bi·∫øn ƒë·ªôc l·∫≠p trong m√¥ h√¨nh"],
        "answer": "85% bi·∫øn thi√™n c·ªßa bi·∫øn ph·ª• thu·ªôc ƒë∆∞·ª£c gi·∫£i th√≠ch b·ªüi c√°c bi·∫øn ƒë·ªôc l·∫≠p",
        "explanation": "R2=0.85 nghƒ©a l√† 85% bi·∫øn thi√™n c·ªßa y ƒë∆∞·ª£c m√¥ h√¨nh gi·∫£i th√≠ch."
    },
    {
        "question": "Standard Error (SE) c·ªßa m·ªôt h·ªá s·ªë trong Multiple Linear Regression ƒëo l∆∞·ªùng ƒëi·ªÅu g√¨?",
        "options": ["ƒê·ªô l·ªách c·ªßa d·ª± ƒëo√°n so v·ªõi gi√° tr·ªã th·ª±c t·∫ø", "ƒê·ªô kh√¥ng ch·∫Øc ch·∫Øn trong ∆∞·ªõc l∆∞·ª£ng h·ªá s·ªë", 
                    "T·ªïng sai s·ªë b√¨nh ph∆∞∆°ng c·ªßa m√¥ h√¨nh", "M·ª©c ƒë·ªô t∆∞∆°ng quan gi·ªØa c√°c bi·∫øn ƒë·ªôc l·∫≠p"],
        "answer": "ƒê·ªô kh√¥ng ch·∫Øc ch·∫Øn trong ∆∞·ªõc l∆∞·ª£ng h·ªá s·ªë",
        "explanation": "SE ƒëo ƒë·ªô tin c·∫≠y c·ªßa ∆∞·ªõc l∆∞·ª£ng h·ªá s·ªë, SE nh·ªè cho th·∫•y ƒë·ªô ch√≠nh x√°c cao."
    }
]

# Ph·∫ßn 8: Regularization (Ridge, Lasso, Elastic Net)
regularization_questions = [
    {
        "question": "Khi √°p d·ª•ng Gradient Descent cho Ridge Regression, gradient c√≥ th√™m th√†nh ph·∫ßn n√†o?",
        "options": ["2Œªw", "Œªsign(w)", "Œªw^2", "‚àíŒªw"],
        "answer": "2Œªw",
        "explanation": "Ridge th√™m 2Œªw v√†o gradient ƒë·ªÉ ph·∫°t c√°c tr·ªçng s·ªë l·ªõn (L2 penalty)."
    },
    {
        "question": "Gradient Descent trong Lasso Regression kh√°c Ridge ·ªü ƒëi·ªÉm n√†o?",
        "options": ["D√πng 2Œªw thay v√¨ Œªsign(w)", "D√πng Œªsign(w) thay v√¨ 2Œªw", 
                    "Kh√¥ng c√≥ th√†nh ph·∫ßn penalty trong gradient", "Ch·ªâ t√≠nh gradient tr√™n m·ªôt m·∫´u duy nh·∫•t"],
        "answer": "D√πng Œªsign(w) thay v√¨ 2Œªw",
        "explanation": "Lasso d√πng L1 penalty (Œªsign(w)), trong khi Ridge d√πng L2 (2Œªw)."
    },
    {
        "question": "N·∫øu Œª=0 trong Ridge Regression, ƒëi·ªÅu g√¨ x·∫£y ra?",
        "options": ["M√¥ h√¨nh tr·ªü th√†nh Linear Regression th√¥ng th∆∞·ªùng", "T·∫•t c·∫£ tham s·ªë b·ªã tri·ªát ti√™u v·ªÅ 0", 
                    "M√¥ h√¨nh kh√¥ng th·ªÉ h·ªôi t·ª•", "H√¨nh ph·∫°t L2 tƒÉng v√¥ h·∫°n"],
        "answer": "M√¥ h√¨nh tr·ªü th√†nh Linear Regression th√¥ng th∆∞·ªùng",
        "explanation": "Khi Œª=0, kh√¥ng c√≥ ph·∫°t, Ridge tr·ªü th√†nh h·ªìi quy tuy·∫øn t√≠nh th√¥ng th∆∞·ªùng."
    },
    {
        "question": "N·∫øu l1_ratio=1 trong Elastic Net, m√¥ h√¨nh tr·ªü th√†nh g√¨?",
        "options": ["Ridge Regression", "Lasso Regression", "Linear Regression", "Polynomial Regression"],
        "answer": "Lasso Regression",
        "explanation": "l1_ratio=1 nghƒ©a l√† ch·ªâ d√πng L1 penalty, t·ª©c l√† Lasso Regression."
    },
    {
        "question": "Khi Œª trong Lasso Regression r·∫•t l·ªõn, ƒëi·ªÅu g√¨ x·∫£y ra v·ªõi c√°c tham s·ªë?",
        "options": ["C√°c tham s·ªë tƒÉng l√™n v√¥ h·∫°n", "H·∫ßu h·∫øt c√°c tham s·ªë b·ªã thu nh·ªè v·ªÅ 0", 
                    "C√°c tham s·ªë kh√¥ng thay ƒë·ªïi", "Ch·ªâ tham s·ªë l·ªõn nh·∫•t b·ªã ·∫£nh h∆∞·ªüng"],
        "answer": "H·∫ßu h·∫øt c√°c tham s·ªë b·ªã thu nh·ªè v·ªÅ 0",
        "explanation": "Œª l·ªõn trong Lasso tƒÉng L1 penalty, ƒë·∫©y nhi·ªÅu tham s·ªë v·ªÅ 0."
    },
    {
        "question": "H·∫°n ch·∫ø ch√≠nh c·ªßa Lasso Regression so v·ªõi Ridge l√† g√¨?",
        "options": ["Kh√¥ng th·ªÉ thu nh·ªè tham s·ªë", "Kh√¥ng x·ª≠ l√Ω t·ªët khi c√°c bi·∫øn ƒë·ªôc l·∫≠p t∆∞∆°ng quan cao", 
                    "Lu√¥n lo·∫°i b·ªè t·∫•t c·∫£ bi·∫øn ƒë·ªôc l·∫≠p", "Kh√¥ng √°p d·ª•ng ƒë∆∞·ª£c Gradient Descent"],
        "answer": "Kh√¥ng x·ª≠ l√Ω t·ªët khi c√°c bi·∫øn ƒë·ªôc l·∫≠p t∆∞∆°ng quan cao",
        "explanation": "Lasso ch·ªçn ng·∫´u nhi√™n m·ªôt bi·∫øn trong nh√≥m t∆∞∆°ng quan, kh√¥ng ·ªïn ƒë·ªãnh nh∆∞ Ridge."
    },
    {
        "question": "Lasso Regression ph√π h·ª£p nh·∫•t trong tr∆∞·ªùng h·ª£p n√†o?",
        "options": ["Khi t·∫•t c·∫£ bi·∫øn ƒë·ªôc l·∫≠p ƒë·ªÅu quan tr·ªçng", "Khi c·∫ßn ch·ªçn l·ªçc ƒë·∫∑c tr∆∞ng", 
                    "Khi d·ªØ li·ªáu c√≥ ph∆∞∆°ng sai sai s·ªë kh√¥ng ƒë·ªïi", "Khi Gradient Descent kh√¥ng h·ªôi t·ª•"],
        "answer": "Khi c·∫ßn ch·ªçn l·ªçc ƒë·∫∑c tr∆∞ng",
        "explanation": "Lasso ƒë∆∞a m·ªôt s·ªë h·ªá s·ªë v·ªÅ 0, ph√π h·ª£p cho vi·ªác ch·ªçn ƒë·∫∑c tr∆∞ng."
    },
    {
        "question": "M·ª•c ƒë√≠ch ch√≠nh c·ªßa regularization trong h·ªìi quy l√† g√¨?",
        "options": ["TƒÉng ƒë·ªô ch√≠nh x√°c c·ªßa d·ª± ƒëo√°n tr√™n t·∫≠p hu·∫•n luy·ªán", 
                    "Gi·∫£m overfitting b·∫±ng c√°ch ki·ªÉm so√°t ƒë·ªô l·ªõn c·ªßa tham s·ªë", 
                    "Lo·∫°i b·ªè t·∫•t c·∫£ c√°c bi·∫øn ƒë·ªôc l·∫≠p kh√¥ng quan tr·ªçng", 
                    "TƒÉng t·ªëc ƒë·ªô h·ªôi t·ª• c·ªßa Gradient Descent"],
        "answer": "Gi·∫£m overfitting b·∫±ng c√°ch ki·ªÉm so√°t ƒë·ªô l·ªõn c·ªßa tham s·ªë",
        "explanation": "Regularization ph·∫°t c√°c tham s·ªë l·ªõn ƒë·ªÉ ngƒÉn m√¥ h√¨nh qu√° kh·ªõp."
    },
    {
        "question": "Elastic Net c√≥ ∆∞u ƒëi·ªÉm g√¨ so v·ªõi Lasso khi x·ª≠ l√Ω multicollinearity?",
        "options": ["Lo·∫°i b·ªè t·∫•t c·∫£ bi·∫øn t∆∞∆°ng quan", "K·∫øt h·ª£p L2 ƒë·ªÉ ·ªïn ƒë·ªãnh c√°c tham s·ªë t∆∞∆°ng quan", 
                    "TƒÉng t·ªëc ƒë·ªô t√≠nh to√°n Gradient Descent", "Kh√¥ng c·∫ßn h·ªá s·ªë Œª"],
        "answer": "K·∫øt h·ª£p L2 ƒë·ªÉ ·ªïn ƒë·ªãnh c√°c tham s·ªë t∆∞∆°ng quan",
        "explanation": "Elastic Net d√πng c·∫£ L1 v√† L2, x·ª≠ l√Ω t·ªët h∆°n khi bi·∫øn c√≥ t∆∞∆°ng quan cao."
    },
    {
        "question": "Elastic Net k·∫øt h·ª£p nh·ªØng th√†nh ph·∫ßn n√†o?",
        "options": ["L1 penalty v√† L2 penalty", "L2 penalty v√† h√†m log", 
                    "L1 penalty v√† h√†m b·∫≠c ba", "Ch·ªâ L1 penalty v·ªõi h·ªá s·ªë thay ƒë·ªïi"],
        "answer": "L1 penalty v√† L2 penalty",
        "explanation": "Elastic Net k·∫øt h·ª£p c·∫£ L1 (Lasso) v√† L2 (Ridge) penalty."
    },
    {
        "question": "Ridge Regression th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng trong tr∆∞·ªùng h·ª£p n√†o?",
        "options": ["Khi c·∫ßn lo·∫°i b·ªè ho√†n to√†n c√°c bi·∫øn kh√¥ng quan tr·ªçng", 
                    "Khi c√°c bi·∫øn ƒë·ªôc l·∫≠p c√≥ t∆∞∆°ng quan cao", 
                    "Khi d·ªØ li·ªáu ho√†n to√†n kh√¥ng c√≥ nhi·ªÖu", 
                    "Khi s·ªë l∆∞·ª£ng bi·∫øn ƒë·ªôc l·∫≠p √≠t h∆°n s·ªë m·∫´u"],
        "answer": "Khi c√°c bi·∫øn ƒë·ªôc l·∫≠p c√≥ t∆∞∆°ng quan cao",
        "explanation": "Ridge x·ª≠ l√Ω t·ªët ƒëa c·ªông tuy·∫øn b·∫±ng c√°ch thu nh·ªè h·ªá s·ªë."
    },
    {
        "question": "ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t c·ªßa Lasso Regression so v·ªõi Ridge Regression l√† g√¨?",
        "options": ["Thu nh·ªè t·∫•t c·∫£ c√°c tham s·ªë v·ªÅ gi√° tr·ªã trung b√¨nh", "C√≥ th·ªÉ ƒë∆∞a m·ªôt s·ªë tham s·ªë v·ªÅ ƒë√∫ng 0", 
                    "Kh√¥ng c·∫ßn h·ªá s·ªë ƒëi·ªÅu chu·∫©n Œª", "Ch·ªâ √°p d·ª•ng cho d·ªØ li·ªáu phi tuy·∫øn"],
        "answer": "C√≥ th·ªÉ ƒë∆∞a m·ªôt s·ªë tham s·ªë v·ªÅ ƒë√∫ng 0",
        "explanation": "Lasso c√≥ kh·∫£ nƒÉng ch·ªçn ƒë·∫∑c tr∆∞ng b·∫±ng c√°ch ƒë·∫∑t h·ªá s·ªë v·ªÅ 0, kh√¥ng nh∆∞ Ridge."
    }
]

# Ph·∫ßn 9: Logistic Regression
logistic_regression_questions = [
    {
        "question": "Trong b√†i to√°n ph√¢n lo·∫°i nh·ªã ph√¢n, n·∫øu t·ª∑ l·ªá l·ªõp kh√¥ng c√¢n b·∫±ng (v√≠ d·ª•: 90% l·ªõp 0, 10% l·ªõp 1), Logistic Regression c√≥ th·ªÉ g·∫∑p v·∫•n ƒë·ªÅ g√¨?",
        "options": ["D·ª± ƒëo√°n lu√¥n l√† l·ªõp 1", "D·ª± ƒëo√°n lu√¥n l√† l·ªõp 0", "Kh√¥ng ·∫£nh h∆∞·ªüng", "M√¥ h√¨nh kh√¥ng h·ªôi t·ª•"],
        "answer": "D·ª± ƒëo√°n lu√¥n l√† l·ªõp 0",
        "explanation": "Khi l·ªõp kh√¥ng c√¢n b·∫±ng, m√¥ h√¨nh c√≥ xu h∆∞·ªõng d·ª± ƒëo√°n l·ªõp ƒëa s·ªë (l·ªõp 0) ƒë·ªÉ gi·∫£m l·ªói."
    },
    {
        "question": "Trong Logistic Regression, qu√° tr√¨nh hu·∫•n luy·ªán nh·∫±m m·ª•c ƒë√≠ch g√¨?",
        "options": ["T·ªëi ƒëa h√≥a h√†m likelihood", "T·ªëi thi·ªÉu h√≥a h√†m m·∫•t m√°t cross-entropy", "C·∫£ hai", "Kh√¥ng ph·∫£i A c≈©ng kh√¥ng ph·∫£i B"],
        "answer": "C·∫£ hai",
        "explanation": "Hu·∫•n luy·ªán Logistic Regression t·ªëi ƒëa h√≥a likelihood, t∆∞∆°ng ƒë∆∞∆°ng v·ªõi t·ªëi thi·ªÉu h√≥a cross-entropy."
    },
    {
        "question": "Regularization trong Logistic Regression gi√∫p √≠ch g√¨?",
        "options": ["TƒÉng t·ªëc ƒë·ªô hu·∫•n luy·ªán", "Gi·∫£m overfitting", "TƒÉng ƒë·ªô ch√≠nh x√°c tr√™n t·∫≠p hu·∫•n luy·ªán", "Gi·∫£m s·ªë l∆∞·ª£ng ƒë·∫∑c tr∆∞ng"],
        "answer": "Gi·∫£m overfitting",
        "explanation": "Regularization ngƒÉn m√¥ h√¨nh qu√° kh·ªõp b·∫±ng c√°ch ph·∫°t c√°c tr·ªçng s·ªë l·ªõn."
    },
    {
        "question": "Logistic Regression c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng cho b√†i to√°n ƒëa l·ªõp kh√¥ng?",
        "options": ["C√≥, nh∆∞ng ch·ªâ v·ªõi chi·∫øn l∆∞·ª£c One-vs-Rest", "Kh√¥ng, ch·ªâ cho nh·ªã ph√¢n", 
                    "C√≥, b·∫±ng c√°ch s·ª≠ d·ª•ng h√†m sigmoid", "Kh√¥ng, ph·∫£i d√πng Softmax Regression"],
        "answer": "C√≥, nh∆∞ng ch·ªâ v·ªõi chi·∫øn l∆∞·ª£c One-vs-Rest",
        "explanation": "Logistic Regression c∆° b·∫£n l√† nh·ªã ph√¢n, nh∆∞ng c√≥ th·ªÉ m·ªü r·ªông ƒëa l·ªõp qua One-vs-Rest."
    },
    {
        "question": "Logistic Regression c√≥ th·ªÉ ƒë∆∞·ª£c coi l√† m·ªôt m√¥ h√¨nh n√†o sau ƒë√¢y?",
        "options": ["M√¥ h√¨nh tuy·∫øn t√≠nh", "M√¥ h√¨nh phi tuy·∫øn", "M√¥ h√¨nh c√¢y", "M√¥ h√¨nh d·ª±a tr√™n kho·∫£ng c√°ch"],
        "answer": "M√¥ h√¨nh tuy·∫øn t√≠nh",
        "explanation": "Logistic Regression l√† m√¥ h√¨nh tuy·∫øn t√≠nh trong kh√¥ng gian log-odds."
    },
    {
        "question": "Logistic Regression ƒë∆∞·ª£c s·ª≠ d·ª•ng cho lo·∫°i b√†i to√°n n√†o?",
        "options": ["Ph√¢n lo·∫°i", "H·ªìi quy", "C·∫£ hai", "Kh√¥ng ph·∫£i ph√¢n lo·∫°i c≈©ng kh√¥ng ph·∫£i h·ªìi quy"],
        "answer": "Ph√¢n lo·∫°i",
        "explanation": "Logistic Regression d√πng ƒë·ªÉ ph√¢n lo·∫°i, kh√¥ng ph·∫£i h·ªìi quy gi√° tr·ªã li√™n t·ª•c."
    },
    {
        "question": "Cho m·ªôt m·∫´u x v·ªõi nh√£n y=1, n·∫øu m√¥ h√¨nh d·ª± ƒëo√°n y^=0.9, gi√° tr·ªã m·∫•t m√°t cross-entropy l√† bao nhi√™u?",
        "options": ["0.105", "0.9", "0.1", "1.0"],
        "answer": "0.105",
        "explanation": "Cross-entropy loss = -log(0.9) ‚âà 0.105 cho y=1 v√† y^=0.9."
    },
    {
        "question": "Trong Logistic Regression, gi√° tr·ªã d·ª± ƒëo√°n y^ ƒë·∫°i di·ªán cho ƒëi·ªÅu g√¨?",
        "options": ["Gi√° tr·ªã li√™n t·ª•c", "Nh√£n l·ªõp c·ª• th·ªÉ", "X√°c su·∫•t thu·ªôc l·ªõp 1", "M·ªôt vector x√°c su·∫•t"],
        "answer": "X√°c su·∫•t thu·ªôc l·ªõp 1",
        "explanation": "y^ l√† x√°c su·∫•t d·ª± ƒëo√°n r·∫±ng m·∫´u thu·ªôc l·ªõp 1."
    },
    {
        "question": "N·∫øu t·∫•t c·∫£ c√°c ƒë·∫∑c tr∆∞ng trong Logistic Regression ƒë·ªÅu c√≥ gi√° tr·ªã 0, d·ª± ƒëo√°n c·ªßa m√¥ h√¨nh s·∫Ω l√† g√¨?",
        "options": ["0", "0.5", "1", "Kh√¥ng x√°c ƒë·ªãnh"],
        "answer": "0.5",
        "explanation": "Khi ƒë·∫∑c tr∆∞ng b·∫±ng 0, w^T x = 0, sigmoid(0) = 0.5."
    },
    {
        "question": "H√†m n√†o ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ chuy·ªÉn ƒë·ªïi gi√° tr·ªã ƒë·∫ßu ra trong Logistic Regression?",
        "options": ["H√†m tuy·∫øn t√≠nh", "H√†m sigmoid", "H√†m softmax", "H√†m ReLU"],
        "answer": "H√†m sigmoid",
        "explanation": "H√†m sigmoid chuy·ªÉn ƒë·ªïi ƒë·∫ßu ra th√†nh x√°c su·∫•t trong kho·∫£ng [0, 1]."
    },
    {
        "question": "H√†m m·∫•t m√°t th∆∞·ªùng d√πng trong Logistic Regression l√† g√¨?",
        "options": ["Mean Squared Error", "Cross-Entropy Loss", "Hinge Loss", "Absolute Error"],
        "answer": "Cross-Entropy Loss",
        "explanation": "Cross-entropy l√† h√†m m·∫•t m√°t chu·∫©n cho b√†i to√°n ph√¢n lo·∫°i nh·ªã ph√¢n."
    },
    {
        "question": "ƒêi·ªÅu ki·ªán n√†o sau ƒë√¢y l√† gi·∫£ ƒë·ªãnh c·ªßa Logistic Regression?",
        "options": ["D·ªØ li·ªáu tu√¢n theo ph√¢n ph·ªëi Gaussian", "C√°c ƒë·∫∑c tr∆∞ng l√† ƒë·ªôc l·∫≠p", 
                    "M·ªëi quan h·ªá tuy·∫øn t√≠nh gi·ªØa log-odds v√† ƒë·∫∑c tr∆∞ng", "Kh√¥ng c√≥ gi·∫£ ƒë·ªãnh n√†o"],
        "answer": "M·ªëi quan h·ªá tuy·∫øn t√≠nh gi·ªØa log-odds v√† ƒë·∫∑c tr∆∞ng",
        "explanation": "Logistic Regression gi·∫£ ƒë·ªãnh log-odds tuy·∫øn t√≠nh v·ªõi ƒë·∫∑c tr∆∞ng."
    },
    {
        "question": "Trong Logistic Regression, n·∫øu gi√° tr·ªã w^T x r·∫•t l·ªõn, x√°c su·∫•t y^ s·∫Ω g·∫ßn v·ªõi gi√° tr·ªã n√†o?",
        "options": ["0", "0.5", "1", "Kh√¥ng x√°c ƒë·ªãnh"],
        "answer": "1",
        "explanation": "Khi w^T x l·ªõn, sigmoid(w^T x) ti·∫øn g·∫ßn 1."
    }
]

# Ph·∫ßn 10: Softmax Regression
softmax_regression_questions = [
    {
        "question": "Trong Softmax Regression, t·ªïng c√°c x√°c su·∫•t d·ª± ƒëo√°n cho c√°c l·ªõp l√† bao nhi√™u?",
        "options": ["0", "1", "T√πy v√†o d·ªØ li·ªáu", "Kh√¥ng x√°c ƒë·ªãnh"],
        "answer": "1",
        "explanation": "H√†m softmax ƒë·∫£m b·∫£o t·ªïng x√°c su·∫•t c√°c l·ªõp b·∫±ng 1."
    },
    {
        "question": "Softmax Regression ƒë∆∞·ª£c s·ª≠ d·ª•ng cho lo·∫°i b√†i to√°n n√†o?",
        "options": ["Ph√¢n lo·∫°i nh·ªã ph√¢n", "Ph√¢n lo·∫°i ƒëa l·ªõp", "H·ªìi quy", "C·∫£ A v√† B"],
        "answer": "Ph√¢n lo·∫°i ƒëa l·ªõp",
        "explanation": "Softmax Regression d√πng cho ph√¢n lo·∫°i ƒëa l·ªõp, m·ªü r·ªông Logistic Regression."
    },
    {
        "question": "Trong b√†i to√°n ph√¢n lo·∫°i ƒëa l·ªõp, n·∫øu c√°c l·ªõp kh√¥ng c√¢n b·∫±ng, Softmax Regression c√≥ th·ªÉ g·∫∑p v·∫•n ƒë·ªÅ g√¨?",
        "options": ["D·ª± ƒëo√°n lu√¥n l√† l·ªõp ƒëa s·ªë", "Kh√¥ng h·ªôi t·ª•", "Kh√¥ng ·∫£nh h∆∞·ªüng", "D·ª± ƒëo√°n lu√¥n l√† l·ªõp thi·ªÉu s·ªë"],
        "answer": "D·ª± ƒëo√°n lu√¥n l√† l·ªõp ƒëa s·ªë",
        "explanation": "L·ªõp kh√¥ng c√¢n b·∫±ng khi·∫øn m√¥ h√¨nh thi√™n v·ªÅ l·ªõp ƒëa s·ªë ƒë·ªÉ gi·∫£m l·ªói."
    },
    {
        "question": "Trong Softmax Regression, n·∫øu t·∫•t c·∫£ c√°c gi√° tr·ªã z_k b·∫±ng nhau, x√°c su·∫•t d·ª± ƒëo√°n cho m·ªói l·ªõp s·∫Ω l√† g√¨?",
        "options": ["0", "1", "1/K, v·ªõi K l√† s·ªë l·ªõp", "Kh√¥ng x√°c ƒë·ªãnh"],
        "answer": "1/K, v·ªõi K l√† s·ªë l·ªõp",
        "explanation": "Khi z_k b·∫±ng nhau, softmax chia ƒë·ªÅu x√°c su·∫•t: 1/K."
    },
    {
        "question": "Regularization trong Softmax Regression gi√∫p √≠ch g√¨?",
        "options": ["TƒÉng t·ªëc ƒë·ªô hu·∫•n luy·ªán", "Gi·∫£m overfitting", "TƒÉng ƒë·ªô ch√≠nh x√°c tr√™n t·∫≠p hu·∫•n luy·ªán", "Gi·∫£m s·ªë l∆∞·ª£ng ƒë·∫∑c tr∆∞ng"],
        "answer": "Gi·∫£m overfitting",
        "explanation": "Regularization gi·∫£m overfitting b·∫±ng c√°ch ph·∫°t c√°c tr·ªçng s·ªë l·ªõn."
    },
    {
        "question": "Softmax Regression c√≥ th·ªÉ ƒë∆∞·ª£c coi l√† tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát c·ªßa Logistic Regression khi s·ªë l·ªõp l√† bao nhi√™u?",
        "options": ["1", "2", "3", "Kh√¥ng th·ªÉ"],
        "answer": "2",
        "explanation": "Khi s·ªë l·ªõp l√† 2, softmax t∆∞∆°ng ƒë∆∞∆°ng v·ªõi Logistic Regression."
    },
    {
        "question": "Trong Softmax Regression, qu√° tr√¨nh hu·∫•n luy·ªán nh·∫±m m·ª•c ƒë√≠ch g√¨?",
        "options": ["T·ªëi ƒëa h√≥a h√†m likelihood", "T·ªëi thi·ªÉu h√≥a h√†m m·∫•t m√°t cross-entropy", "C·∫£ hai", "Kh√¥ng ph·∫£i A c≈©ng kh√¥ng ph·∫£i B"],
        "answer": "C·∫£ hai",
        "explanation": "T·ªëi ƒëa h√≥a likelihood t∆∞∆°ng ƒë∆∞∆°ng v·ªõi t·ªëi thi·ªÉu h√≥a cross-entropy."
    },
    {
        "question": "Softmax Regression s·ª≠ d·ª•ng ma tr·∫≠n tr·ªçng s·ªë nh∆∞ th·∫ø n√†o?",
        "options": ["M·ªôt vector tr·ªçng s·ªë cho t·∫•t c·∫£ c√°c l·ªõp", "M·ªôt vector tr·ªçng s·ªë cho m·ªói l·ªõp", 
                    "M·ªôt ma tr·∫≠n tr·ªçng s·ªë chung cho t·∫•t c·∫£ c√°c l·ªõp", "Kh√¥ng s·ª≠ d·ª•ng tr·ªçng s·ªë"],
        "answer": "M·ªôt vector tr·ªçng s·ªë cho m·ªói l·ªõp",
        "explanation": "M·ªói l·ªõp trong softmax c√≥ m·ªôt vector tr·ªçng s·ªë ri√™ng."
    },
    {
        "question": "Softmax Regression v√† Logistic Regression kh√°c nhau ·ªü ƒëi·ªÉm n√†o?",
        "options": ["S·ªë l·ªõp", "H√†m k√≠ch ho·∫°t", "C·∫£ hai", "Kh√¥ng c√≥ kh√°c bi·ªát"],
        "answer": "C·∫£ hai",
        "explanation": "Softmax kh√°c Logistic ·ªü s·ªë l·ªõp (ƒëa l·ªõp) v√† h√†m k√≠ch ho·∫°t (softmax vs sigmoid)."
    },
    {
        "question": "Softmax Regression c√≥ th·ªÉ ƒë∆∞·ª£c coi l√† m·ªôt m√¥ h√¨nh n√†o sau ƒë√¢y?",
        "options": ["M√¥ h√¨nh tuy·∫øn t√≠nh", "M√¥ h√¨nh phi tuy·∫øn", "M√¥ h√¨nh c√¢y", "M√¥ h√¨nh d·ª±a tr√™n kho·∫£ng c√°ch"],
        "answer": "M√¥ h√¨nh tuy·∫øn t√≠nh",
        "explanation": "Softmax l√† m√¥ h√¨nh tuy·∫øn t√≠nh trong kh√¥ng gian log-odds."
    },
    {
        "question": "H√†m n√†o ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ chuy·ªÉn ƒë·ªïi ƒë·∫ßu ra trong Softmax Regression?",
        "options": ["H√†m sigmoid", "H√†m softmax", "H√†m tuy·∫øn t√≠nh", "H√†m ReLU"],
        "answer": "H√†m softmax",
        "explanation": "H√†m softmax chuy·ªÉn ƒë·ªïi ƒë·∫ßu ra th√†nh ph√¢n ph·ªëi x√°c su·∫•t qua c√°c l·ªõp."
    },
    {
        "question": "Trong Softmax Regression, n·∫øu gi√° tr·ªã z_k c·ªßa m·ªôt l·ªõp r·∫•t l·ªõn, x√°c su·∫•t d·ª± ƒëo√°n cho l·ªõp ƒë√≥ s·∫Ω g·∫ßn v·ªõi gi√° tr·ªã n√†o?",
        "options": ["0", "0.5", "1", "Kh√¥ng x√°c ƒë·ªãnh"],
        "answer": "1",
        "explanation": "z_k l·ªõn l√†m softmax g√°n x√°c su·∫•t g·∫ßn 1 cho l·ªõp ƒë√≥."
    },
    {
        "question": "H√†m m·∫•t m√°t th∆∞·ªùng d√πng trong Softmax Regression l√† g√¨?",
        "options": ["Mean Squared Error", "Cross-Entropy Loss", "Hinge Loss", "Absolute Error"],
        "answer": "Cross-Entropy Loss",
        "explanation": "Cross-entropy l√† h√†m m·∫•t m√°t chu·∫©n cho ph√¢n lo·∫°i ƒëa l·ªõp."
    }
]

# Ph·∫ßn 11: Decision Trees
decision_tree_questions = [
    {
        "question": "Khi x√¢y d·ª±ng Decision Tree, thu·ªôc t√≠nh n√†o ƒë∆∞·ª£c ch·ªçn ƒë·ªÉ chia nh√°nh?",
        "options": ["Thu·ªôc t√≠nh c√≥ Information Gain cao nh·∫•t", "Thu·ªôc t√≠nh c√≥ gi√° tr·ªã trung b√¨nh l·ªõn nh·∫•t", 
                    "Thu·ªôc t√≠nh c√≥ s·ªë l∆∞·ª£ng gi√° tr·ªã duy nh·∫•t √≠t nh·∫•t", "Thu·ªôc t√≠nh xu·∫•t hi·ªán ƒë·∫ßu ti√™n trong d·ªØ li·ªáu"],
        "answer": "Thu·ªôc t√≠nh c√≥ Information Gain cao nh·∫•t",
        "explanation": "Decision Tree ch·ªçn thu·ªôc t√≠nh c√≥ Information Gain cao nh·∫•t ƒë·ªÉ t·ªëi ∆∞u h√≥a vi·ªác chia."
    },
    {
        "question": "∆Øu ƒëi·ªÉm n√†o sau ƒë√¢y KH√îNG ph·∫£i c·ªßa Decision Trees?",
        "options": ["D·ªÖ hi·ªÉu v√† tr·ª±c quan", "Kh√¥ng y√™u c·∫ßu chu·∫©n h√≥a d·ªØ li·ªáu", 
                    "Hi·ªáu qu·∫£ v·ªõi d·ªØ li·ªáu cao chi·ªÅu", "Kh√¥ng nh·∫°y c·∫£m v·ªõi gi√° tr·ªã thi·∫øu"],
        "answer": "Kh√¥ng nh·∫°y c·∫£m v·ªõi gi√° tr·ªã thi·∫øu",
        "explanation": "Decision Trees nh·∫°y c·∫£m v·ªõi gi√° tr·ªã thi·∫øu v√† c·∫ßn x·ª≠ l√Ω tr∆∞·ªõc."
    },
    {
        "question": "Information Gain trong Decision Trees l√† g√¨?",
        "options": ["S·ª± gi·∫£m entropy sau khi chia nh√°nh", "T·ªïng entropy c·ªßa t·∫•t c·∫£ c√°c n√∫t l√°", 
                    "ƒê·ªô s√¢u t·ªëi ƒëa c·ªßa c√¢y", "S·ªë l∆∞·ª£ng n√∫t trong c√¢y"],
        "answer": "S·ª± gi·∫£m entropy sau khi chia nh√°nh",
        "explanation": "Information Gain ƒëo l∆∞·ªùng m·ª©c gi·∫£m ƒë·ªô h·ªón lo·∫°n sau khi chia nh√°nh."
    },
    {
        "question": "Gi√° tr·ªã Entropy c·ªßa m·ªôt n√∫t trong Decision Tree l√† bao nhi√™u khi t·∫•t c·∫£ c√°c m·∫´u trong n√∫t thu·ªôc c√πng m·ªôt l·ªõp?",
        "options": ["0", "1", "‚àû", "-1"],
        "answer": "0",
        "explanation": "Entropy b·∫±ng 0 khi t·∫•t c·∫£ m·∫´u c√πng l·ªõp, t·ª©c l√† ho√†n to√†n tinh khi·∫øt."
    },
    {
        "question": "Nh∆∞·ª£c ƒëi·ªÉm ch√≠nh c·ªßa Decision Trees l√† g√¨?",
        "options": ["D·ªÖ b·ªã overfitting n·∫øu kh√¥ng ƒë∆∞·ª£c c·∫Øt t·ªâa", "Kh√¥ng th·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu h·∫°ng m·ª•c", 
                    "Y√™u c·∫ßu nhi·ªÅu b·ªô nh·ªõ", "Ch·ªâ ho·∫°t ƒë·ªông v·ªõi d·ªØ li·ªáu s·ªë"],
        "answer": "D·ªÖ b·ªã overfitting n·∫øu kh√¥ng ƒë∆∞·ª£c c·∫Øt t·ªâa",
        "explanation": "Decision Trees d·ªÖ qu√° kh·ªõp n·∫øu kh√¥ng gi·ªõi h·∫°n ƒë·ªô s√¢u ho·∫∑c c·∫Øt t·ªâa."
    },
    {
        "question": "Entropy v√† Gini Index c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng trong Decision Trees cho b√†i to√°n h·ªìi quy kh√¥ng?",
        "options": ["C√≥, v·ªõi c√°c ƒëi·ªÅu ch·ªânh ph√π h·ª£p", "Kh√¥ng, ch·ªâ d√πng cho ph√¢n lo·∫°i", 
                    "Ch·ªâ Entropy c√≥ th·ªÉ d√πng cho h·ªìi quy", "Ch·ªâ Gini Index c√≥ th·ªÉ d√πng cho h·ªìi quy"],
        "answer": "Kh√¥ng, ch·ªâ d√πng cho ph√¢n lo·∫°i",
        "explanation": "Entropy v√† Gini d√πng cho ph√¢n lo·∫°i; h·ªìi quy d√πng c√°c ti√™u ch√≠ nh∆∞ MSE."
    },
    {
        "question": "Information Gain ƒë∆∞·ª£c t√≠nh nh∆∞ th·∫ø n√†o trong Decision Trees?",
        "options": ["Entropy c·ªßa n√∫t cha tr·ª´ Entropy trung b√¨nh c√≥ tr·ªçng s·ªë c·ªßa c√°c n√∫t con", 
                    "T·ªïng Entropy c·ªßa t·∫•t c·∫£ c√°c n√∫t l√°", "ƒê·ªô s√¢u c·ªßa c√¢y", "S·ªë l∆∞·ª£ng n√∫t trong c√¢y"],
        "answer": "Entropy c·ªßa n√∫t cha tr·ª´ Entropy trung b√¨nh c√≥ tr·ªçng s·ªë c·ªßa c√°c n√∫t con",
        "explanation": "Information Gain = Entropy tr∆∞·ªõc chia - Entropy trung b√¨nh sau chia."
    },
    {
        "question": "Vi·ªác t·ªëi ƒëa h√≥a Information Gain ·ªü m·ªói b∆∞·ªõc c√≥ th·ªÉ d·∫´n ƒë·∫øn ƒëi·ªÅu g√¨?",
        "options": ["Underfitting", "Overfitting", "Kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn overfitting", "Gi·∫£m ƒë·ªô s√¢u c·ªßa c√¢y"],
        "answer": "Overfitting",
        "explanation": "T·ªëi ƒëa h√≥a qu√° m·ª©c c√≥ th·ªÉ l√†m c√¢y qu√° ph·ª©c t·∫°p, d·∫´n ƒë·∫øn overfitting."
    },
    {
        "question": "Entropy trong Decision Trees ƒëo l∆∞·ªùng ƒëi·ªÅu g√¨?",
        "options": ["ƒê·ªô tinh khi·∫øt c·ªßa nh√£n trong m·ªôt n√∫t", "Kho·∫£ng c√°ch gi·ªØa c√°c ƒëi·ªÉm d·ªØ li·ªáu", 
                    "ƒê·ªô ph·ª©c t·∫°p c·ªßa c√¢y", "T·ªëc ƒë·ªô hu·∫•n luy·ªán c·ªßa m√¥ h√¨nh"],
        "answer": "ƒê·ªô tinh khi·∫øt c·ªßa nh√£n trong m·ªôt n√∫t",
        "explanation": "Entropy ƒëo m·ª©c ƒë·ªô h·ªón lo·∫°n ho·∫∑c kh√¥ng tinh khi·∫øt c·ªßa nh√£n trong n√∫t."
    },
    {
        "question": "S·ª± kh√°c bi·ªát ch√≠nh gi·ªØa Gini Index v√† Entropy trong Decision Trees l√† g√¨?",
        "options": ["Gini Index d√πng cho ph√¢n lo·∫°i, Entropy d√πng cho h·ªìi quy", 
                    "Gini Index nh·∫°y c·∫£m h∆°n v·ªõi s·ª± thay ƒë·ªïi nh·ªè trong d·ªØ li·ªáu", 
                    "Entropy ƒëo m·ª©c ƒë·ªô h·ªón lo·∫°n, Gini Index ƒëo ƒë·ªô t·∫°p ch·∫•t", 
                    "Kh√¥ng c√≥ s·ª± kh√°c bi·ªát, ch√∫ng c√≥ th·ªÉ thay th·∫ø cho nhau"],
        "answer": "Entropy ƒëo m·ª©c ƒë·ªô h·ªón lo·∫°n, Gini Index ƒëo ƒë·ªô t·∫°p ch·∫•t",
        "explanation": "C·∫£ hai ƒëo ƒë·ªô tinh khi·∫øt, nh∆∞ng Entropy d·ª±a tr√™n l√Ω thuy·∫øt th√¥ng tin, Gini ƒë∆°n gi·∫£n h∆°n."
    },
    {
        "question": "Trong b√†i to√°n h·ªìi quy, gi√° tr·ªã d·ª± ƒëo√°n c·ªßa m·ªôt n√∫t l√° trong Decision Tree l√† g√¨?",
        "options": ["Gi√° tr·ªã trung b√¨nh c·ªßa c√°c m·∫´u trong n√∫t ƒë√≥", "Gi√° tr·ªã l·ªõn nh·∫•t trong c√°c m·∫´u", 
                    "Gi√° tr·ªã nh·ªè nh·∫•t trong c√°c m·∫´u", "Gi√° tr·ªã trung v·ªã c·ªßa c√°c m·∫´u"],
        "answer": "Gi√° tr·ªã trung b√¨nh c·ªßa c√°c m·∫´u trong n√∫t ƒë√≥",
        "explanation": "Trong h·ªìi quy, n√∫t l√° d·ª± ƒëo√°n b·∫±ng trung b√¨nh c√°c gi√° tr·ªã trong n√∫t."
    },
    {
        "question": "M·ª•c ƒë√≠ch ch√≠nh c·ªßa pruning (c·∫Øt t·ªâa) trong Decision Trees l√† g√¨?",
        "options": ["Gi·∫£m ƒë·ªô s√¢u c·ªßa c√¢y", "TƒÉng accuracy tr√™n t·∫≠p hu·∫•n luy·ªán", 
                    "NgƒÉn ch·∫∑n overfitting", "TƒÉng t·ªëc ƒë·ªô hu·∫•n luy·ªán"],
        "answer": "NgƒÉn ch·∫∑n overfitting",
        "explanation": "Pruning gi·∫£m ƒë·ªô ph·ª©c t·∫°p c·ªßa c√¢y ƒë·ªÉ tr√°nh qu√° kh·ªõp."
    },
    {
        "question": "Trong th·ª±c t·∫ø, khi n√†o b·∫°n n√™n ∆∞u ti√™n s·ª≠ d·ª•ng Gini Index thay v√¨ Entropy?",
        "options": ["Khi c·∫ßn t√≠nh to√°n nhanh h∆°n", "Khi d·ªØ li·ªáu c√≥ nhi·ªÅu l·ªõp", 
                    "Khi c·∫ßn m√¥ h√¨nh ch√≠nh x√°c h∆°n", "Khi d·ªØ li·ªáu c√≥ nhi·ªÖu"],
        "answer": "Khi c·∫ßn t√≠nh to√°n nhanh h∆°n",
        "explanation": "Gini Index t√≠nh to√°n nhanh h∆°n Entropy do c√¥ng th·ª©c ƒë∆°n gi·∫£n h∆°n."
    },
    {
        "question": "L√†m th·∫ø n√†o Decision Trees x·ª≠ l√Ω c√°c thu·ªôc t√≠nh li√™n t·ª•c?",
        "options": ["Chia th√†nh c√°c bin r·ªùi r·∫°c", "S·ª≠ d·ª•ng ng∆∞·ª°ng ƒë·ªÉ chia th√†nh hai kho·∫£ng", 
                    "B·ªè qua c√°c thu·ªôc t√≠nh li√™n t·ª•c", "Chuy·ªÉn ƒë·ªïi th√†nh c√°c gi√° tr·ªã h·∫°ng m·ª•c"],
        "answer": "S·ª≠ d·ª•ng ng∆∞·ª°ng ƒë·ªÉ chia th√†nh hai kho·∫£ng",
        "explanation": "Decision Trees ch·ªçn ng∆∞·ª°ng t·ªëi ∆∞u ƒë·ªÉ chia thu·ªôc t√≠nh li√™n t·ª•c."
    },
    {
        "question": "Gi√° tr·ªã Gini Index c·ªßa m·ªôt n√∫t trong ƒë√≥ t·∫•t c·∫£ c√°c m·∫´u thu·ªôc c√πng m·ªôt l·ªõp l√† bao nhi√™u?",
        "options": ["0", "1", "0.5", "‚àû"],
        "answer": "0",
        "explanation": "Gini Index b·∫±ng 0 khi n√∫t ho√†n to√†n tinh khi·∫øt."
    },
    {
        "question": "Trong Decision Tree, th√†nh ph·∫ßn n√†o ƒë·∫°i di·ªán cho ƒëi·ªÅu ki·ªán ƒë·ªÉ chia d·ªØ li·ªáu?",
        "options": ["Root node (N√∫t g·ªëc)", "Leaf node (N√∫t l√°)", "Internal node (N√∫t b√™n trong)", "Branch (Nh√°nh)"],
        "answer": "Internal node (N√∫t b√™n trong)",
        "explanation": "N√∫t b√™n trong ch·ª©a ƒëi·ªÅu ki·ªán chia d·ªØ li·ªáu."
    },
    {
        "question": "Ti√™u ch√≠ n√†o sau ƒë√¢y KH√îNG ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ ƒë√°nh gi√° vi·ªác chia nh√°nh trong Decision Tree?",
        "options": ["Gini impurity", "Entropy", "Mean Squared Error (MSE)", "Correlation coefficient"],
        "answer": "Correlation coefficient",
        "explanation": "Correlation coefficient kh√¥ng ƒë∆∞·ª£c d√πng ƒë·ªÉ ƒë√°nh gi√° chia nh√°nh."
    },
    {
        "question": "Decision Tree l√† m·ªôt thu·∫≠t to√°n h·ªçc m√°y thu·ªôc lo·∫°i n√†o?",
        "options": ["H·ªçc c√≥ gi√°m s√°t (Supervised Learning)", "H·ªçc kh√¥ng gi√°m s√°t (Unsupervised Learning)", 
                    "H·ªçc b√°n gi√°m s√°t (Semi-supervised Learning)", "H·ªçc tƒÉng c∆∞·ªùng (Reinforcement Learning)"],
        "answer": "H·ªçc c√≥ gi√°m s√°t (Supervised Learning)",
        "explanation": "Decision Tree c·∫ßn d·ªØ li·ªáu c√≥ nh√£n, thu·ªôc h·ªçc c√≥ gi√°m s√°t."
    }
]

# Ph·∫ßn 12: k-Nearest Neighbors (k-NN)
knn_questions = [
    {
        "question": "Cho m·ªôt t·∫≠p d·ªØ li·ªáu v·ªõi hai ƒë·∫∑c tr∆∞ng: chi·ªÅu cao (cm) v√† thu nh·∫≠p (ƒë·ªìng). N·∫øu kh√¥ng chu·∫©n h√≥a d·ªØ li·ªáu, ƒëi·ªÅu g√¨ c√≥ th·ªÉ x·∫£y ra khi √°p d·ª•ng k-NN?",
        "options": ["Chi·ªÅu cao s·∫Ω c√≥ ·∫£nh h∆∞·ªüng l·ªõn h∆°n thu nh·∫≠p", "Thu nh·∫≠p s·∫Ω c√≥ ·∫£nh h∆∞·ªüng l·ªõn h∆°n chi·ªÅu cao", 
                    "C·∫£ hai c√≥ ·∫£nh h∆∞·ªüng nh∆∞ nhau", "Kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn k·∫øt qu·∫£"],
        "answer": "Thu nh·∫≠p s·∫Ω c√≥ ·∫£nh h∆∞·ªüng l·ªõn h∆°n chi·ªÅu cao",
        "explanation": "Thu nh·∫≠p c√≥ thang ƒëo l·ªõn h∆°n (ƒë·ªìng) s·∫Ω chi ph·ªëi kho·∫£ng c√°ch n·∫øu kh√¥ng chu·∫©n h√≥a."
    },
    {
        "question": "ƒêi·ªÅu g√¨ x·∫£y ra khi ch·ªçn gi√° tr·ªã k qu√° l·ªõn trong thu·∫≠t to√°n k-NN?",
        "options": ["Thu·∫≠t to√°n c√≥ th·ªÉ tr·ªü n√™n nh·∫°y c·∫£m v·ªõi nhi·ªÖu", "M√¥ h√¨nh c√≥ th·ªÉ b·ªã overfitting", 
                    "M√¥ h√¨nh c√≥ th·ªÉ b·ªã underfitting", "Thu·∫≠t to√°n k-NN kh√¥ng b·ªã ·∫£nh h∆∞·ªüng b·ªüi gi√° tr·ªã"],
        "answer": "M√¥ h√¨nh c√≥ th·ªÉ b·ªã underfitting",
        "explanation": "k l·ªõn l√†m m√¥ h√¨nh qu√° t·ªïng qu√°t, d·∫´n ƒë·∫øn underfitting."
    },
    {
        "question": "Thu·∫≠t to√°n k-NN c√≥ ph√π h·ª£p v·ªõi d·ªØ li·ªáu l·ªõn kh√¥ng?",
        "options": ["C√≥, v√¨ n√≥ d·ªÖ tri·ªÉn khai", "C√≥, v√¨ n√≥ c√≥ th·ªùi gian d·ª± ƒëo√°n nhanh", 
                    "Kh√¥ng, v√¨ n√≥ ƒë√≤i h·ªèi t√≠nh to√°n kho·∫£ng c√°ch v·ªõi to√†n b·ªô t·∫≠p d·ªØ li·ªáu", 
                    "Kh√¥ng, v√¨ n√≥ y√™u c·∫ßu d·ªØ li·ªáu ph·∫£i tuy·∫øn t√≠nh"],
        "answer": "Kh√¥ng, v√¨ n√≥ ƒë√≤i h·ªèi t√≠nh to√°n kho·∫£ng c√°ch v·ªõi to√†n b·ªô t·∫≠p d·ªØ li·ªáu",
        "explanation": "k-NN ch·∫≠m v·ªõi d·ªØ li·ªáu l·ªõn do ph·∫£i t√≠nh kho·∫£ng c√°ch cho m·ªçi ƒëi·ªÉm."
    },
    {
        "question": "Cho t·∫≠p d·ªØ li·ªáu ph√¢n lo·∫°i g·ªìm 2 l·ªõp A v√† B. Khi tƒÉng gi√° tr·ªã k t·ª´ 3 l√™n 15, ƒëi·ªÅu g√¨ c√≥ kh·∫£ nƒÉng x·∫£y ra nh·∫•t?",
        "options": ["M√¥ h√¨nh c√≥ xu h∆∞·ªõng overfitting", "M√¥ h√¨nh c√≥ xu h∆∞·ªõng underfitting", 
                    "Kh√¥ng ·∫£nh h∆∞·ªüng", "ƒê·ªô ch√≠nh x√°c lu√¥n tƒÉng"],
        "answer": "M√¥ h√¨nh c√≥ xu h∆∞·ªõng underfitting",
        "explanation": "TƒÉng k l√†m m√¥ h√¨nh d·ª±a v√†o qu√° nhi·ªÅu l√°ng gi·ªÅng, d·∫´n ƒë·∫øn underfitting."
    },
    {
        "question": "Thu·∫≠t to√°n k-NN c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng cho b√†i to√°n n√†o sau ƒë√¢y?",
        "options": ["Ph√¢n lo·∫°i (Classification)", "H·ªìi quy (Regression)", "C·∫£ hai Classification & Regression", "Kh√¥ng c√≥ ph∆∞∆°ng √°n n√†o ƒë√∫ng"],
        "answer": "C·∫£ hai Classification & Regression",
        "explanation": "k-NN d√πng ƒë∆∞·ª£c cho c·∫£ ph√¢n lo·∫°i (l·ªõp ph·ªï bi·∫øn nh·∫•t) v√† h·ªìi quy (trung b√¨nh)."
    },
    {
        "question": "Trong k-NN, n·∫øu d·ªØ li·ªáu c√≥ nhi·ªÅu ƒë·∫∑c tr∆∞ng (features), v·∫•n ƒë·ªÅ g√¨ c√≥ th·ªÉ x·∫£y ra?",
        "options": ["Hi·ªáu su·∫•t c·ªßa m√¥ h√¨nh s·∫Ω tƒÉng l√™n", "Kho·∫£ng c√°ch gi·ªØa c√°c ƒëi·ªÉm s·∫Ω tr·ªü n√™n k√©m ph√¢n bi·ªát h∆°n", 
                    "k-NN ho·∫°t ƒë·ªông t·ªët h∆°n v·ªõi d·ªØ li·ªáu c√≥ nhi·ªÅu chi·ªÅu", "M√¥ h√¨nh tr·ªü n√™n √≠t b·ªã ·∫£nh h∆∞·ªüng b·ªüi gi√° tr·ªã k"],
        "answer": "Kho·∫£ng c√°ch gi·ªØa c√°c ƒëi·ªÉm s·∫Ω tr·ªü n√™n k√©m ph√¢n bi·ªát h∆°n",
        "explanation": "Nhi·ªÅu ƒë·∫∑c tr∆∞ng g√¢y ra 'l·ªùi nguy·ªÅn chi·ªÅu' l√†m kho·∫£ng c√°ch m·∫•t √Ω nghƒ©a."
    },
    {
        "question": "M·ªôt t·∫≠p d·ªØ li·ªáu c√≥ 1000 ƒëi·ªÉm trong kh√¥ng gian 2D. Khi tƒÉng s·ªë chi·ªÅu l√™n 100D, ƒëi·ªÅu g√¨ x·∫£y ra v·ªõi thu·∫≠t to√°n k-NN?",
        "options": ["Hi·ªáu su·∫•t tƒÉng v√¨ c√≥ th√™m th√¥ng tin", "Kho·∫£ng c√°ch gi·ªØa c√°c ƒëi·ªÉm tr·ªü n√™n v√¥ nghƒ©a", 
                    "k-NN ho·∫°t ƒë·ªông nhanh h∆°n", "M√¥ h√¨nh kh√¥ng b·ªã ·∫£nh h∆∞·ªüng"],
        "answer": "Kho·∫£ng c√°ch gi·ªØa c√°c ƒëi·ªÉm tr·ªü n√™n v√¥ nghƒ©a",
        "explanation": "Chi·ªÅu cao l√†m t·∫•t c·∫£ ƒëi·ªÉm xa nhau g·∫ßn nh∆∞ ƒë·ªìng ƒë·ªÅu, m·∫•t √Ω nghƒ©a ph√¢n bi·ªát."
    },
    {
        "question": "Cho hai ƒëi·ªÉm A(3,4) v√† B(7,1). Kho·∫£ng c√°ch Manhattan gi·ªØa hai ƒëi·ªÉm n√†y l√†?",
        "options": ["5", "6", "7", "8"],
        "answer": "7",
        "explanation": "Manhattan = |3-7| + |4-1| = 4 + 3 = 7."
    },
    {
        "question": "∆Øu ƒëi·ªÉm ch√≠nh c·ªßa thu·∫≠t to√°n k-NN l√† g√¨?",
        "options": ["Hu·∫•n luy·ªán nhanh, ch·ªâ c·∫ßn t√≠nh to√°n m·ªôt l·∫ßn", "ƒê∆∞a ra d·ª± ƒëo√°n nhanh ngay c·∫£ v·ªõi t·∫≠p d·ªØ li·ªáu l·ªõn", 
                    "Kh√¥ng y√™u c·∫ßu gi·∫£ ƒë·ªãnh v·ªÅ ph√¢n ph·ªëi d·ªØ li·ªáu", "Kh√¥ng b·ªã ·∫£nh h∆∞·ªüng b·ªüi s·ªë l∆∞·ª£ng ƒë·∫∑c tr∆∞ng"],
        "answer": "Kh√¥ng y√™u c·∫ßu gi·∫£ ƒë·ªãnh v·ªÅ ph√¢n ph·ªëi d·ªØ li·ªáu",
        "explanation": "k-NN kh√¥ng c·∫ßn gi·∫£ ƒë·ªãnh ph√¢n ph·ªëi, ch·ªâ d·ª±a tr√™n kho·∫£ng c√°ch."
    },
    {
        "question": "Kho·∫£ng c√°ch ph·ªï bi·∫øn n√†o sau ƒë√¢y th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng trong thu·∫≠t to√°n k-NN?",
        "options": ["Kho·∫£ng c√°ch Euclidean", "Kho·∫£ng c√°ch Manhattan", "Kho·∫£ng c√°ch Minkowski", "T·∫•t c·∫£ c√°c ph∆∞∆°ng √°n tr√™n"],
        "answer": "T·∫•t c·∫£ c√°c ph∆∞∆°ng √°n tr√™n",
        "explanation": "Euclidean, Manhattan, v√† Minkowski ƒë·ªÅu l√† c√°c kho·∫£ng c√°ch ph·ªï bi·∫øn trong k-NN."
    },
    {
        "question": "Gi·∫£ s·ª≠ ta d√πng k-NN Regression v·ªõi k = 3 ƒë·ªÉ d·ª± ƒëo√°n gi√° tr·ªã y c·ªßa ƒëi·ªÉm x=4. T·∫≠p d·ªØ li·ªáu (x, y) nh∆∞ sau: (2, 3), (5, 7), (7, 8), (3, 4). Gi√° tr·ªã d·ª± ƒëo√°n l√† bao nhi√™u?",
        "options": ["4", "5", "6", "7"],
        "answer": "5",
        "explanation": "3 l√°ng gi·ªÅng g·∫ßn nh·∫•t: (2, 3), (3, 4), (5, 7). Trung b√¨nh = (3+4+7)/3 = 5."
    },
    {
        "question": "Trong thu·∫≠t to√°n k-NN, 'k' bi·ªÉu th·ªã ƒëi·ªÅu g√¨?",
        "options": ["S·ªë l∆∞·ª£ng l·ªõp trong d·ªØ li·ªáu hu·∫•n luy·ªán", "S·ªë l∆∞·ª£ng h√†ng trong t·∫≠p d·ªØ li·ªáu hu·∫•n luy·ªán", 
                    "S·ªë l∆∞·ª£ng l√°ng gi·ªÅng g·∫ßn nh·∫•t ƒë∆∞·ª£c xem x√©t khi ph√¢n lo·∫°i m·ªôt ƒëi·ªÉm d·ªØ li·ªáu", 
                    "S·ªë l·∫ßn thu·∫≠t to√°n l·∫∑p l·∫°i ƒë·ªÉ t√¨m ki·∫øm l√°ng gi·ªÅng t·ªët nh·∫•t"],
        "answer": "S·ªë l∆∞·ª£ng l√°ng gi·ªÅng g·∫ßn nh·∫•t ƒë∆∞·ª£c xem x√©t khi ph√¢n lo·∫°i m·ªôt ƒëi·ªÉm d·ªØ li·ªáu",
        "explanation": "k l√† s·ªë l√°ng gi·ªÅng g·∫ßn nh·∫•t d√πng ƒë·ªÉ d·ª± ƒëo√°n."
    },
    {
        "question": "Thu·∫≠t to√°n k-NN thu·ªôc nh√≥m thu·∫≠t to√°n n√†o trong Machine Learning?",
        "options": ["H·ªçc c√≥ gi√°m s√°t (Supervised Learning)", "H·ªçc kh√¥ng gi√°m s√°t (Unsupervised Learning)", 
                    "H·ªçc tƒÉng c∆∞·ªùng (Reinforcement Learning)", "H·ªçc s√¢u (Deep Learning)"],
        "answer": "H·ªçc c√≥ gi√°m s√°t (Supervised Learning)",
        "explanation": "k-NN c·∫ßn d·ªØ li·ªáu c√≥ nh√£n ƒë·ªÉ d·ª± ƒëo√°n, thu·ªôc h·ªçc c√≥ gi√°m s√°t."
    }
]

# Ph·∫ßn 13: Naive Bayes
naive_bayes_questions = [
    {
        "question": "Lo·∫°i Naive Bayes n√†o sau ƒë√¢y th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng cho d·ªØ li·ªáu vƒÉn b·∫£n?",
        "options": ["Gaussian Naive Bayes", "Bernoulli Naive Bayes", "Multinomial Naive Bayes", "K-Nearest Neighbors"],
        "answer": "Multinomial Naive Bayes",
        "explanation": "Multinomial Naive Bayes ph√π h·ª£p v·ªõi d·ªØ li·ªáu vƒÉn b·∫£n nh∆∞ t·∫ßn su·∫•t t·ª´."
    },
    {
        "question": "So v·ªõi Logistic Regression, Naive Bayes c√≥ ∆∞u ƒëi·ªÉm g√¨?",
        "options": ["Kh√¥ng y√™u c·∫ßu gi·∫£ ƒë·ªãnh v·ªÅ ph√¢n ph·ªëi d·ªØ li·ªáu", "Lu√¥n cho ƒë·ªô ch√≠nh x√°c cao h∆°n", 
                    "Kh√¥ng c·∫ßn ƒëi·ªÅu ch·ªânh si√™u tham s·ªë", "C√≥ th·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu phi tuy·∫øn t√≠nh"],
        "answer": "Kh√¥ng c·∫ßn ƒëi·ªÅu ch·ªânh si√™u tham s·ªë",
        "explanation": "Naive Bayes ƒë∆°n gi·∫£n, kh√¥ng c·∫ßn ƒëi·ªÅu ch·ªânh nhi·ªÅu tham s·ªë nh∆∞ Logistic."
    },
    {
        "question": "M·ªôt t·∫≠p d·ªØ li·ªáu c√≥ 3 l·ªõp C1, C2, C3 v·ªõi x√°c su·∫•t ti√™n nghi·ªám: P(C1)=0.5, P(C2)=0.3, P(C3)=0.2. M·ªôt ƒëi·ªÉm d·ªØ li·ªáu X c√≥ x√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán: P(X|C1)=0.2, P(X|C2)=0.4, P(X|C3)=0.6. H·ªèi ƒëi·ªÉm d·ªØ li·ªáu X thu·ªôc l·ªõp n√†o theo Naive Bayes?",
        "options": ["C1", "C2", "C3", "Kh√¥ng x√°c ƒë·ªãnh"],
        "answer": "C3",
        "explanation": "P(C1|X) ‚àù 0.5*0.2=0.1; P(C2|X) ‚àù 0.3*0.4=0.12; P(C3|X) ‚àù 0.2*0.6=0.12. C2 v√† C3 b·∫±ng nhau, nh∆∞ng th∆∞·ªùng ch·ªçn l·ªõp c√≥ P(X|C) cao nh·∫•t n·∫øu x√©t chu·∫©n h√≥a, c·∫ßn t√≠nh P(X)."
    },
    {
        "question": "Gaussian Naive Bayes th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng khi n√†o?",
        "options": ["Khi ƒë·∫∑c tr∆∞ng c√≥ ph√¢n ph·ªëi nh·ªã th·ª©c (Bernoulli)", "Khi ƒë·∫∑c tr∆∞ng c√≥ ph√¢n ph·ªëi chu·∫©n (Gaussian)", 
                    "Khi ƒë·∫∑c tr∆∞ng c√≥ ph√¢n ph·ªëi Poisson", "Khi ƒë·∫∑c tr∆∞ng c√≥ ph√¢n ph·ªëi b·∫•t k·ª≥"],
        "answer": "Khi ƒë·∫∑c tr∆∞ng c√≥ ph√¢n ph·ªëi chu·∫©n (Gaussian)",
        "explanation": "Gaussian Naive Bayes gi·∫£ ƒë·ªãnh ƒë·∫∑c tr∆∞ng tu√¢n theo ph√¢n ph·ªëi chu·∫©n."
    },
    {
        "question": "Cho m·ªôt t·∫≠p d·ªØ li·ªáu ph√¢n lo·∫°i th∆∞ r√°c, trong ƒë√≥: P(S)=0.3, P(N)=0.7, P(W|S)=0.8, P(W|N)=0.1. T√≠nh x√°c su·∫•t m·ªôt email l√† spam khi bi·∫øt r·∫±ng n√≥ ch·ª©a t·ª´ 'gi·∫£m gi√°' (P(S|W))?",
        "options": ["0.852", "0.774", "0.654", "0.981"],
        "answer": "0.774",
        "explanation": "P(S|W) = P(W|S)P(S) / P(W) = 0.8*0.3 / (0.8*0.3 + 0.1*0.7) = 0.24 / 0.31 ‚âà 0.774."
    },
    {
        "question": "ƒêi·ªÅu n√†o sau ƒë√¢y l√† kh√¥ng ƒë√∫ng v·ªÅ Naive Bayes?",
        "options": ["Naive Bayes c√≥ th·ªÉ ho·∫°t ƒë·ªông t·ªët ngay c·∫£ khi gi·∫£ ƒë·ªãnh ƒë·ªôc l·∫≠p kh√¥ng ho√†n to√†n ƒë√∫ng", 
                    "Naive Bayes c√≥ th·ªÉ s·ª≠ d·ª•ng cho c·∫£ b√†i to√°n ph√¢n lo·∫°i nh·ªã ph√¢n v√† ƒëa l·ªõp", 
                    "Naive Bayes c√≥ th·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu b·ªã thi·∫øu gi√° tr·ªã m√† kh√¥ng c·∫ßn x·ª≠ l√Ω tr∆∞·ªõc", 
                    "Naive Bayes th∆∞·ªùng ƒë∆∞·ª£c d√πng trong l·ªçc th∆∞ r√°c (Spam Filtering)"],
        "answer": "Naive Bayes c√≥ th·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu b·ªã thi·∫øu gi√° tr·ªã m√† kh√¥ng c·∫ßn x·ª≠ l√Ω tr∆∞·ªõc",
        "explanation": "Naive Bayes c·∫ßn x·ª≠ l√Ω gi√° tr·ªã thi·∫øu tr∆∞·ªõc khi √°p d·ª•ng."
    },
    {
        "question": "Naive Bayes th∆∞·ªùng kh√¥ng ph√π h·ª£p trong tr∆∞·ªùng h·ª£p n√†o d∆∞·ªõi ƒë√¢y?",
        "options": ["Khi d·ªØ li·ªáu c√≥ nhi·ªÅu ƒë·∫∑c tr∆∞ng ƒë·ªôc l·∫≠p", "Khi d·ªØ li·ªáu c√≥ ch·ª©a ƒë·∫∑c tr∆∞ng li√™n quan ch·∫∑t ch·∫Ω v·ªõi nhau", 
                    "Khi t·∫≠p d·ªØ li·ªáu c√≥ k√≠ch th∆∞·ªõc nh·ªè", "Khi m√¥ h√¨nh c·∫ßn d·ª± ƒëo√°n nhanh tr√™n d·ªØ li·ªáu l·ªõn"],
        "answer": "Khi d·ªØ li·ªáu c√≥ ch·ª©a ƒë·∫∑c tr∆∞ng li√™n quan ch·∫∑t ch·∫Ω v·ªõi nhau",
        "explanation": "Gi·∫£ ƒë·ªãnh ƒë·ªôc l·∫≠p c·ªßa Naive Bayes kh√¥ng ƒë√∫ng khi ƒë·∫∑c tr∆∞ng t∆∞∆°ng quan cao."
    },
    {
        "question": "Nh∆∞·ª£c ƒëi·ªÉm ch√≠nh c·ªßa Naive Bayes l√† g√¨?",
        "options": ["Y√™u c·∫ßu d·ªØ li·ªáu l·ªõn", "Gi·∫£ ƒë·ªãnh ƒë·ªôc l·∫≠p gi·ªØa c√°c ƒë·∫∑c tr∆∞ng th∆∞·ªùng kh√¥ng ƒë√∫ng", 
                    "T√≠nh to√°n ph·ª©c t·∫°p", "Kh√¥ng th·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu li√™n t·ª•c"],
        "answer": "Gi·∫£ ƒë·ªãnh ƒë·ªôc l·∫≠p gi·ªØa c√°c ƒë·∫∑c tr∆∞ng th∆∞·ªùng kh√¥ng ƒë√∫ng",
        "explanation": "Gi·∫£ ƒë·ªãnh ƒë·ªôc l·∫≠p hi·∫øm khi ƒë√∫ng trong th·ª±c t·∫ø, ·∫£nh h∆∞·ªüng ƒë·∫øn hi·ªáu su·∫•t."
    },
    {
        "question": "Lo·∫°i Naive Bayes n√†o ph√π h·ª£p nh·∫•t cho d·ªØ li·ªáu li√™n t·ª•c?",
        "options": ["Gaussian Naive Bayes", "Multinomial Naive Bayes", "Bernoulli Naive Bayes", "Categorical Naive Bayes"],
        "answer": "Gaussian Naive Bayes",
        "explanation": "Gaussian Naive Bayes d√πng cho d·ªØ li·ªáu li√™n t·ª•c v·ªõi ph√¢n ph·ªëi chu·∫©n."
    },
    {
        "question": "X√°c su·∫•t h·∫≠u nghi·ªám P(C|X) trong Naive Bayes ƒë∆∞·ª£c t√≠nh nh∆∞ th·∫ø n√†o?",
        "options": ["P(C|X) = P(X|C)P(C) / P(X)", "P(C|X) = P(X|C)P(C)", "P(C|X) = P(C) / P(X)", "P(C|X) = P(X|C)"],
        "answer": "P(C|X) = P(X|C)P(C) / P(X)",
        "explanation": "ƒê√¢y l√† c√¥ng th·ª©c Bayes chu·∫©n ƒë·ªÉ t√≠nh x√°c su·∫•t h·∫≠u nghi·ªám."
    },
    {
        "question": "Naive Bayes d·ª±a tr√™n nguy√™n t·∫Øc n√†o d∆∞·ªõi ƒë√¢y?",
        "options": ["C√°c thu·ªôc t√≠nh c·ªßa d·ªØ li·ªáu l√† ho√†n to√†n ƒë·ªôc l·∫≠p", "C√°c thu·ªôc t√≠nh c·ªßa d·ªØ li·ªáu ph·ª• thu·ªôc tuy·∫øn t√≠nh v√†o nhau", 
                    "C√°c thu·ªôc t√≠nh c·ªßa d·ªØ li·ªáu c√≥ quan h·ªá phi tuy·∫øn t√≠nh", "Kh√¥ng c√≥ gi·∫£ ƒë·ªãnh n√†o v·ªÅ m·ªëi quan h·ªá gi·ªØa c√°c thu·ªôc t√≠nh"],
        "answer": "C√°c thu·ªôc t√≠nh c·ªßa d·ªØ li·ªáu l√† ho√†n to√†n ƒë·ªôc l·∫≠p",
        "explanation": "Naive Bayes gi·∫£ ƒë·ªãnh c√°c ƒë·∫∑c tr∆∞ng ƒë·ªôc l·∫≠p v·ªõi nhau."
    },
    {
        "question": "V·∫•n ƒë·ªÅ 'zero probability' trong Naive Bayes l√† g√¨?",
        "options": ["X√°c su·∫•t c·ªßa m·ªôt l·ªõp b·∫±ng 0", "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán c·ªßa m·ªôt ƒë·∫∑c tr∆∞ng b·∫±ng 0", 
                    "X√°c su·∫•t ti√™n nghi·ªám b·∫±ng 0", "X√°c su·∫•t h·∫≠u nghi·ªám b·∫±ng 0"],
        "answer": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán c·ªßa m·ªôt ƒë·∫∑c tr∆∞ng b·∫±ng 0",
        "explanation": "Khi P(X|C)=0, x√°c su·∫•t h·∫≠u nghi·ªám th√†nh 0, c·∫ßn k·ªπ thu·∫≠t nh∆∞ Laplace smoothing."
    },
    {
        "question": "Naive Bayes th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng trong ·ª©ng d·ª•ng n√†o?",
        "options": ["Spam Filtering", "Image Classification", "Object Tracking", "T·∫•t c·∫£ c√°c ph∆∞∆°ng √°n tr√™n"],
        "answer": "Spam Filtering",
        "explanation": "Naive Bayes ph·ªï bi·∫øn trong l·ªçc th∆∞ r√°c do t·ªëc ƒë·ªô v√† hi·ªáu qu·∫£."
    },
    {
        "question": "M·ªôt t·∫≠p d·ªØ li·ªáu hu·∫•n luy·ªán c√≥ hai l·ªõp: L·ªõp A v√† L·ªõp B. X√°c su·∫•t ti√™n nghi·ªám: P(A)=0.4, P(B)=0.6. M·ªôt ƒëi·ªÉm d·ªØ li·ªáu X c√≥ x√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán: P(X|A)=0.5, P(X|B)=0.2. T√≠nh x√°c su·∫•t h·∫≠u nghi·ªám P(A|X)?",
        "options": ["0.625", "0.375", "0.5", "0.4"],
        "answer": "0.625",
        "explanation": "P(A|X) = 0.5*0.4 / (0.5*0.4 + 0.2*0.6) = 0.2 / 0.32 = 0.625."
    },
    {
        "question": "Naive Bayes thu·ªôc lo·∫°i thu·∫≠t to√°n n√†o trong Machine Learning?",
        "options": ["H·ªçc c√≥ gi√°m s√°t (Supervised Learning)", "H·ªçc kh√¥ng gi√°m s√°t (Unsupervised Learning)", 
                    "H·ªçc tƒÉng c∆∞·ªùng (Reinforcement Learning)", "H·ªçc s√¢u (Deep Learning)"],
        "answer": "H·ªçc c√≥ gi√°m s√°t (Supervised Learning)",
        "explanation": "Naive Bayes c·∫ßn d·ªØ li·ªáu c√≥ nh√£n, thu·ªôc h·ªçc c√≥roman s√°t."
    },
    {
        "question": "So v·ªõi c√°c thu·∫≠t to√°n ph√¢n lo·∫°i kh√°c, Naive Bayes c√≥ ∆∞u ƒëi·ªÉm n√†o?",
        "options": ["T·ªëc ƒë·ªô hu·∫•n luy·ªán v√† d·ª± ƒëo√°n nhanh", "Y√™u c·∫ßu nhi·ªÅu d·ªØ li·ªáu h∆°n so v·ªõi SVM", 
                    "Kh√¥ng c·∫ßn gi·∫£ ƒë·ªãnh n√†o v·ªÅ d·ªØ li·ªáu", "Lu√¥n c√≥ ƒë·ªô ch√≠nh x√°c cao h∆°n Decision Tree"],
        "answer": "T·ªëc ƒë·ªô hu·∫•n luy·ªán v√† d·ª± ƒëo√°n nhanh",
        "explanation": "Naive Bayes nhanh do t√≠nh to√°n ƒë∆°n gi·∫£n d·ª±a tr√™n x√°c su·∫•t."
    }
]

# Ph·∫ßn 14: ·ª®ng d·ª•ng Th·ª±c t·∫ø
real_world_questions = [
    {
        "question": "M·ªôt n·ªÅn t·∫£ng h·ªçc tr·ª±c tuy·∫øn mu·ªën ph√°t hi·ªán s·ªõm h·ªçc vi√™n c√≥ kh·∫£ nƒÉng ng∆∞ng h·ªçc. H·ªç n√™n l√†m g√¨?",
        "options": ["Xem t·ª∑ l·ªá ho√†n th√†nh kh√≥a h·ªçc theo th√°ng", "∆Ø·ªõc t√≠nh kh·∫£ nƒÉng r·ªùi b·ªè d·ª±a tr√™n ho·∫°t ƒë·ªông tr∆∞·ªõc ƒë√≥", 
                    "G·ª≠i kh·∫£o s√°t ƒë√°nh gi√° ch·∫•t l∆∞·ª£ng b√†i gi·∫£ng", "Th·ªëng k√™ l∆∞·ª£t truy c·∫≠p theo chuy√™n ng√†nh"],
        "answer": "∆Ø·ªõc t√≠nh kh·∫£ nƒÉng r·ªùi b·ªè d·ª±a tr√™n ho·∫°t ƒë·ªông tr∆∞·ªõc ƒë√≥",
        "explanation": "D·ª± ƒëo√°n d·ª±a tr√™n h√†nh vi tr∆∞·ªõc ƒë√≥ l√† c√°ch ti·∫øp c·∫≠n h·ªçc m√°y hi·ªáu qu·∫£."
    },
    {
        "question": "M·ªôt ·ª©ng d·ª•ng √¢m nh·∫°c mu·ªën ƒë·ªÅ xu·∫•t danh s√°ch nh·∫°c c√° nh√¢n h√≥a cho ng∆∞·ªùi d√πng d·ª±a tr√™n s·ªü th√≠ch v√† h√†nh vi nghe tr∆∞·ªõc ƒë√≥. C√°ch ti·∫øp c·∫≠n n√†o ph√π h·ª£p?",
        "options": ["Li·ªát k√™ b√†i h√°t ph·ªï bi·∫øn nh·∫•t trong tu·∫ßn", "S·∫Øp x·∫øp nh·∫°c theo th·ªÉ lo·∫°i", 
                    "∆Ø·ªõc t√≠nh xu h∆∞·ªõng nghe c·ªßa ng∆∞·ªùi d√πng c·ª• th·ªÉ", "Th·ªëng k√™ s·ªë l·∫ßn nh·∫•n 'like' m·ªói b√†i"],
        "answer": "∆Ø·ªõc t√≠nh xu h∆∞·ªõng nghe c·ªßa ng∆∞·ªùi d√πng c·ª• th·ªÉ",
        "explanation": "D·ª± ƒëo√°n s·ªü th√≠ch c√° nh√¢n h√≥a d·ª±a tr√™n d·ªØ li·ªáu ng∆∞·ªùi d√πng l√† t·ªëi ∆∞u."
    },
    {
        "question": "M·ªôt h√£ng v·∫≠n chuy·ªÉn mu·ªën nh√≥m c√°c tuy·∫øn ƒë∆∞·ªùng c√≥ ƒëi·ªÉm t∆∞∆°ng ƒë·ªìng ƒë·ªÉ t·ªëi ∆∞u h√≥a ho·∫°t ƒë·ªông. H·ªç n√™n l√†m g√¨?",
        "options": ["ƒê·∫øm s·ªë l∆∞·ª£t xe ƒëi trong ng√†y", "X·∫øp tuy·∫øn theo v·ªã tr√≠ ƒë·ªãa l√Ω c·ªßa tr·∫°m", 
                    "T√¨m c√°c tuy·∫øn c√≥ ƒë·∫∑c ƒëi·ªÉm t∆∞∆°ng t·ª± nhau", "Th·ªëng k√™ doanh thu theo tuy·∫øn"],
        "answer": "T√¨m c√°c tuy·∫øn c√≥ ƒë·∫∑c ƒëi·ªÉm t∆∞∆°ng t·ª± nhau",
        "explanation": "Ph√¢n c·ª•m c√°c tuy·∫øn t∆∞∆°ng ƒë·ªìng l√† c√°ch ti·∫øp c·∫≠n h·ªçc kh√¥ng gi√°m s√°t ph√π h·ª£p."
    },
    {
        "question": "M·ªôt c√¥ng ty truy·ªÅn th√¥ng mu·ªën t·ª± ƒë·ªông x√°c ƒë·ªãnh c√°c ch·ªß ƒë·ªÅ ch√≠nh trong h√†ng ngh√¨n b√†i vi·∫øt tin t·ª©c m·ªói ng√†y m√† kh√¥ng c·∫ßn g√°n th·∫ª th·ªß c√¥ng. H·ªç n√™n l√†m g√¨?",
        "options": ["L·ªçc c√°c b√†i vi·∫øt theo ƒë·ªô d√†i", "T√¨m ra c√°c ch·ªß ƒë·ªÅ th∆∞·ªùng g·∫∑p d·ª±a tr√™n n·ªôi dung", 
                    "X·∫øp b√†i theo ngu·ªìn ƒëƒÉng t·∫£i", "S·∫Øp x·∫øp b√†i vi·∫øt theo ng√†y ƒëƒÉng"],
        "answer": "T√¨m ra c√°c ch·ªß ƒë·ªÅ th∆∞·ªùng g·∫∑p d·ª±a tr√™n n·ªôi dung",
        "explanation": "Topic modeling (nh∆∞ LDA) l√† c√°ch h·ªçc kh√¥ng gi√°m s√°t ƒë·ªÉ t√¨m ch·ªß ƒë·ªÅ."
    },
    {
        "question": "M·ªôt ng√¢n h√†ng mu·ªën d·ª± ƒëo√°n kh·∫£ nƒÉng m·ªôt kh√°ch h√†ng m·ªõi s·∫Ω ho√†n tr·∫£ kho·∫£n vay. H·ªç n√™n l√†m g√¨?",
        "options": ["Ph√¢n t√≠ch th·ªùi gian x·ª≠ l√Ω ƒë∆°n vay", "D·ª± ƒëo√°n h√†nh vi d·ª±a v√†o h·ªì s∆° t∆∞∆°ng t·ª±", 
                    "T·ªïng h·ª£p danh s√°ch kh√°ch h√†ng m·ªõi", "X√°c ƒë·ªãnh c√°c khu v·ª±c c√≥ nhi·ªÅu ƒë∆°n vay"],
        "answer": "D·ª± ƒëo√°n h√†nh vi d·ª±a v√†o h·ªì s∆° t∆∞∆°ng t·ª±",
        "explanation": "D·ª± ƒëo√°n d·ª±a tr√™n h·ªì s∆° t∆∞∆°ng t·ª± l√† c√°ch ti·∫øp c·∫≠n ph√¢n lo·∫°i h·ªçc m√°y."
    },
    {
        "question": "M·ªôt b·ªánh vi·ªán mu·ªën d·ª± ƒëo√°n kh·∫£ nƒÉng b·ªánh nh√¢n quay l·∫°i t√°i kh√°m trong 30 ng√†y t·ªõi. C√°ch n√†o h·ª£p l√Ω?",
        "options": ["T·∫°o b√°o c√°o th·ªëng k√™ c√°c lo·∫°i thu·ªëc d√πng", "T√¨m nh·ªØng ng∆∞·ªùi c√≥ l·ªãch s·ª≠ t∆∞∆°ng t·ª±", 
                    "∆Ø·ªõc l∆∞·ª£ng kh·∫£ nƒÉng quay l·∫°i d·ª±a tr√™n h·ªì s∆°", "Th·ªëng k√™ s·ªë b·ªánh nh√¢n theo khu v·ª±c"],
        "answer": "∆Ø·ªõc l∆∞·ª£ng kh·∫£ nƒÉng quay l·∫°i d·ª±a tr√™n h·ªì s∆°",
        "explanation": "D·ª± ƒëo√°n d·ª±a tr√™n h·ªì s∆° c√° nh√¢n l√† c√°ch ti·∫øp c·∫≠n h·ªçc m√°y hi·ªáu qu·∫£."
    },
    {
        "question": "M·ªôt t·ªï ch·ª©c b·∫£o t·ªìn ƒë·ªông v·∫≠t mu·ªën ph√°t hi·ªán c√°c nh√≥m lo√†i v·∫≠t c√≥ h√†nh vi t∆∞∆°ng t·ª± nhau t·ª´ d·ªØ li·ªáu theo d√µi GPS m√† kh√¥ng c·∫ßn ph√¢n lo·∫°i s·∫µn. H·ªç n√™n l√†m g√¨?",
        "options": ["S·∫Øp x·∫øp d·ªØ li·ªáu theo th·ªùi gian", "T√¨m c√°c m·∫´u di chuy·ªÉn c√≥ t√≠nh ch·∫•t g·∫ßn nhau", 
                    "Ghi l·∫°i s·ªë l∆∞·ª£ng m·∫´u ƒë∆∞·ª£c theo d√µi", "So s√°nh kho·∫£ng c√°ch di chuy·ªÉn m·ªói ng√†y"],
        "answer": "T√¨m c√°c m·∫´u di chuy·ªÉn c√≥ t√≠nh ch·∫•t g·∫ßn nhau",
        "explanation": "Ph√¢n c·ª•m d·ªØ li·ªáu GPS l√† c√°ch h·ªçc kh√¥ng gi√°m s√°t ƒë·ªÉ t√¨m nh√≥m t∆∞∆°ng t·ª±."
    },
    {
        "question": "M·ªôt c√¥ng ty b·∫£o hi·ªÉm mu·ªën x√¢y d·ª±ng h·ªá th·ªëng ƒë·ªÉ ∆∞·ªõc t√≠nh kh·∫£ nƒÉng x·∫£y ra r·ªßi ro t√†i ch√≠nh ƒë·ªëi v·ªõi t·ª´ng kh√°ch h√†ng trong nƒÉm t·ªõi. C√°ch ti·∫øp c·∫≠n n√†o ph√π h·ª£p?",
        "options": ["G·ªôp kh√°ch h√†ng theo ng√†nh ngh·ªÅ", "T√≠nh t·ªïng s·ªë y√™u c·∫ßu b·ªìi th∆∞·ªùng trong nƒÉm tr∆∞·ªõc", 
                    "D·ª± b√°o nguy c∆° d·ª±a tr√™n l·ªãch s·ª≠ t·ª´ng c√° nh√¢n", "So s√°nh s·ªë l∆∞·ª£ng h·ª£p ƒë·ªìng theo khu v·ª±c"],
        "answer": "D·ª± b√°o nguy c∆° d·ª±a tr√™n l·ªãch s·ª≠ t·ª´ng c√° nh√¢n",
        "explanation": "D·ª± ƒëo√°n d·ª±a tr√™n l·ªãch s·ª≠ c√° nh√¢n l√† c√°ch ti·∫øp c·∫≠n h·ªçc m√°y ph√π h·ª£p."
    },
    {
        "question": "M·ªôt c√¥ng ty an ninh m·∫°ng mu·ªën ph√°t hi·ªán h√†nh vi truy c·∫≠p b·∫•t th∆∞·ªùng t·ª´ d·ªØ li·ªáu ch∆∞a ƒë∆∞·ª£c l·ªçc th·ªß c√¥ng. H·ªç n√™n l√†m g√¨?",
        "options": ["T·∫°o b·∫£n ƒë·ªì truy c·∫≠p theo m√∫i gi·ªù", "X√°c ƒë·ªãnh m·∫´u kh√°c bi·ªát trong ho·∫°t ƒë·ªông", 
                    "G·ªôp c√°c IP theo v·ªã tr√≠ ƒë·ªãa l√Ω", "T·ªïng h·ª£p s·ªë l∆∞·ª£t ƒëƒÉng nh·∫≠p theo ng√†y"],
        "answer": "X√°c ƒë·ªãnh m·∫´u kh√°c bi·ªát trong ho·∫°t ƒë·ªông",
        "explanation": "Ph√°t hi·ªán b·∫•t th∆∞·ªùng (anomaly detection) l√† c√°ch h·ªçc m√°y hi·ªáu qu·∫£."
    },
    {
        "question": "M·ªôt si√™u th·ªã mu·ªën t√¨m c√°c ki·ªÉu mua s·∫Øm th∆∞·ªùng g·∫∑p gi·ªØa c√°c kh√°ch h√†ng. C√°ch n√†o ph√π h·ª£p?",
        "options": ["So s√°nh doanh thu gi·ªØa c√°c th√°ng", "T√¨m c√°c m·∫´u h√†nh vi mua gi·ªëng nhau", 
                    "L·∫≠p danh s√°ch s·∫£n ph·∫©m gi·∫£m gi√°", "Th·ªëng k√™ th·ªùi gian cao ƒëi·ªÉm trong ng√†y"],
        "answer": "T√¨m c√°c m·∫´u h√†nh vi mua gi·ªëng nhau",
        "explanation": "Ph√¢n c·ª•m h√†nh vi mua s·∫Øm l√† c√°ch h·ªçc kh√¥ng gi√°m s√°t ph√π h·ª£p."
    }
]

# Ph·∫ßn 15: Reinforcement Learning
reinforcement_learning_questions = [
    {
        "question": "Trong m√™ cung, Environment tr·∫£ v·ªÅ g√¨ sau khi robot di chuy·ªÉn sang ph·∫£i?",
        "options": ["Action v√† Policy", "State v√† Reward", "Value Function", "Discount Factor"],
        "answer": "State v√† Reward",
        "explanation": "Environment tr·∫£ v·ªÅ tr·∫°ng th√°i m·ªõi v√† ph·∫ßn th∆∞·ªüng sau h√†nh ƒë·ªông."
    },
    {
        "question": "T·∫°i sao th·ª≠ v√† sai (trial and error) quan tr·ªçng trong RL?",
        "options": ["ƒê·ªÉ ƒë·ªãnh nghƒ©a m√¥i tr∆∞·ªùng", "ƒê·ªÉ h·ªçc c√°c h√†nh ƒë·ªông t·ªët nh·∫•t qua kinh nghi·ªám", 
                    "ƒê·ªÉ t√≠nh to√°n ph·∫ßn th∆∞·ªüng ch√≠nh x√°c", "ƒê·ªÉ l∆∞u tr·ªØ t·∫•t c·∫£ tr·∫°ng th√°i"],
        "answer": "ƒê·ªÉ h·ªçc c√°c h√†nh ƒë·ªông t·ªët nh·∫•t qua kinh nghi·ªám",
        "explanation": "Th·ª≠ v√† sai gi√∫p agent h·ªçc ch√≠nh s√°ch t·ªëi ∆∞u t·ª´ tr·∫£i nghi·ªám."
    },
    {
        "question": "Ph·∫ßn th∆∞·ªüng (Reward) trong v√≠ d·ª• m√™ cung ƒë·∫°i di·ªán cho ƒëi·ªÅu g√¨?",
        "options": ["Ph·∫£n h·ªìi cho m·ªôt h√†nh ƒë·ªông (v√≠ d·ª•: +10 cho kho b√°u)", "V·ªã tr√≠ c·ªßa robot trong l∆∞·ªõi", 
                    "Ch√≠nh s√°ch ch·ªçn h√†nh ƒë·ªông", "X√°c su·∫•t chuy·ªÉn sang tr·∫°ng th√°i m·ªõi"],
        "answer": "Ph·∫£n h·ªìi cho m·ªôt h√†nh ƒë·ªông (v√≠ d·ª•: +10 cho kho b√°u)",
        "explanation": "Reward l√† ph·∫£n h·ªìi ƒë·ªãnh l∆∞·ª£ng cho h√†nh ƒë·ªông c·ªßa agent."
    },
    {
        "question": "Ch√≠nh s√°ch (Policy) trong Reinforcement Learning l√† g√¨?",
        "options": ["Gi√° tr·ªã c·ªßa m·ªôt tr·∫°ng th√°i", "Ph·∫ßn th∆∞·ªüng cho m·ªôt h√†nh ƒë·ªông", 
                    "Chi·∫øn l∆∞·ª£c ch·ªçn h√†nh ƒë·ªông", "Quy t·∫Øc c·ªßa m√¥i tr∆∞·ªùng"],
        "answer": "Chi·∫øn l∆∞·ª£c ch·ªçn h√†nh ƒë·ªông",
        "explanation": "Policy ƒë·ªãnh nghƒ©a c√°ch agent ch·ªçn h√†nh ƒë·ªông trong m·ªói tr·∫°ng th√°i."
    },
    {
        "question": "Vai tr√≤ c·ªßa Value Function trong v√≠ d·ª• m√™ cung l√† g√¨?",
        "options": ["Ch·ªçn h√†nh ƒë·ªông ti·∫øp theo", "∆Ø·ªõc t√≠nh con ƒë∆∞·ªùng t·ªët nh·∫•t ƒë·∫øn kho b√°u", 
                    "X√°c ƒë·ªãnh t∆∞·ªùng c·ªßa m√™ cung", "ƒê·∫∑t gi√° tr·ªã ph·∫ßn th∆∞·ªüng"],
        "answer": "∆Ø·ªõc t√≠nh con ƒë∆∞·ªùng t·ªët nh·∫•t ƒë·∫øn kho b√°u",
        "explanation": "Value Function ∆∞·ªõc l∆∞·ª£ng ph·∫ßn th∆∞·ªüng d√†i h·∫°n t·ª´ m·ªói tr·∫°ng th√°i."
    },
    {
        "question": "Vai tr√≤ c·ªßa Agent trong Reinforcement Learning l√† g√¨?",
        "options": ["X√°c ƒë·ªãnh quy t·∫Øc c·ªßa m√¥i tr∆∞·ªùng", "Th·ª±c hi·ªán h√†nh ƒë·ªông v√† h·ªçc t·ª´ ph·∫ßn th∆∞·ªüng", 
                    "Cung c·∫•p ph·∫ßn th∆∞·ªüng cho m√¥i tr∆∞·ªùng", "L∆∞u tr·ªØ t·∫•t c·∫£ tr·∫°ng th√°i c√≥ th·ªÉ"],
        "answer": "Th·ª±c hi·ªán h√†nh ƒë·ªông v√† h·ªçc t·ª´ ph·∫ßn th∆∞·ªüng",
        "explanation": "Agent t∆∞∆°ng t√°c v·ªõi m√¥i tr∆∞·ªùng, h·ªçc t·ª´ ph·∫£n h·ªìi ƒë·ªÉ c·∫£i thi·ªán."
    },
    {
        "question": "H√†nh ƒë·ªông (Action) trong Reinforcement Learning l√† g√¨?",
        "options": ["Ph·∫ßn th∆∞·ªüng do m√¥i tr∆∞·ªùng cung c·∫•p", "Gi√° tr·ªã c·ªßa m·ªôt tr·∫°ng th√°i", 
                    "L·ª±a ch·ªçn c·ªßa Agent (v√≠ d·ª•: di chuy·ªÉn sang ph·∫£i)", "Ph·∫£n h·ªìi c·ªßa m√¥i tr∆∞·ªùng"],
        "answer": "L·ª±a ch·ªçn c·ªßa Agent (v√≠ d·ª•: di chuy·ªÉn sang ph·∫£i)",
        "explanation": "Action l√† quy·∫øt ƒë·ªãnh do agent ƒë∆∞a ra trong tr·∫°ng th√°i hi·ªán t·∫°i."
    },
    {
        "question": "Agent g·ª≠i g√¨ ƒë·∫øn Environment trong v√≠ d·ª• m√™ cung?",
        "options": ["State", "Reward", "Action", "Policy"],
        "answer": "Action",
        "explanation": "Agent g·ª≠i h√†nh ƒë·ªông (nh∆∞ 'di chuy·ªÉn sang ph·∫£i') ƒë·∫øn m√¥i tr∆∞·ªùng."
    },
    {
        "question": "RL kh√°c v·ªõi supervised learning nh∆∞ th·∫ø n√†o?",
        "options": ["S·ª≠ d·ª•ng d·ªØ li·ªáu c√≥ nh√£n", "H·ªçc t·ª´ ph·∫ßn th∆∞·ªüng", "Y√™u c·∫ßu t·∫≠p d·ªØ li·ªáu c·ªë ƒë·ªãnh", "D·ª± ƒëo√°n ƒë·∫ßu ra tr·ª±c ti·∫øp"],
        "answer": "H·ªçc t·ª´ ph·∫ßn th∆∞·ªüng",
        "explanation": "RL h·ªçc qua th·ª≠ nghi·ªám v√† ph·∫ßn th∆∞·ªüng, kh√¥ng c·∫ßn d·ªØ li·ªáu c√≥ nh√£n."
    },
    {
        "question": "Th√†nh ph·∫ßn n√†o k·∫øt n·ªëi Agent v√† Environment?",
        "options": ["Value Function", "State v√† Reward", "Policy", "Discount Factor"],
        "answer": "State v√† Reward",
        "explanation": "State v√† Reward l√† giao ti·∫øp ch√≠nh gi·ªØa agent v√† m√¥i tr∆∞·ªùng."
    },
    {
        "question": "M·ª•c ti√™u ch√≠nh c·ªßa Reinforcement Learning l√† g√¨?",
        "options": ["D·ª± ƒëo√°n nh√£n t·ª´ d·ªØ li·ªáu", "T·ªëi ƒëa h√≥a ph·∫ßn th∆∞·ªüng t√≠ch l≈©y", 
                    "Gi·∫£m thi·ªÉu th·ªùi gian t√≠nh to√°n", "L∆∞u tr·ªØ t·∫•t c·∫£ tr·∫°ng th√°i"],
        "answer": "T·ªëi ƒëa h√≥a ph·∫ßn th∆∞·ªüng t√≠ch l≈©y",
        "explanation": "RL nh·∫±m t·ªëi ∆∞u h√≥a t·ªïng ph·∫ßn th∆∞·ªüng d√†i h·∫°n."
    },
    {
        "question": "Trong m√™ cung, ƒëi·ªÅu g√¨ cho th·∫•y m·ªôt Policy t·ªët?",
        "options": ["T·ªëc ƒë·ªô t√≠nh to√°n cao", "ƒê·∫°t ƒë∆∞·ª£c kho b√°u v·ªõi ph·∫ßn th∆∞·ªüng cao", 
                    "Tr√°nh t·∫•t c·∫£ h√†nh ƒë·ªông", "Ghi nh·ªõ t·∫•t c·∫£ tr·∫°ng th√°i"],
        "answer": "ƒê·∫°t ƒë∆∞·ª£c kho b√°u v·ªõi ph·∫ßn th∆∞·ªüng cao",
        "explanation": "Policy t·ªët d·∫´n agent ƒë·∫øn m·ª•c ti√™u v·ªõi ph·∫ßn th∆∞·ªüng t·ªëi ∆∞u."
    },
    {
        "question": "Policy ƒë·ªãnh nghƒ©a ƒëi·ªÅu g√¨ trong v√≠ d·ª• m√™ cung?",
        "options": ["B·ªë c·ª•c c·ªßa m√™ cung", "Ph·∫ßn th∆∞·ªüng khi ƒë·∫øn (3,3)", "H√†nh ƒë·ªông th·ª±c hi·ªán trong m·ªói tr·∫°ng th√°i", "X√°c su·∫•t va v√†o t∆∞·ªùng"],
        "answer": "H√†nh ƒë·ªông th·ª±c hi·ªán trong m·ªói tr·∫°ng th√°i",
        "explanation": "Policy x√°c ƒë·ªãnh h√†nh ƒë·ªông agent ch·ªçn ·ªü m·ªói v·ªã tr√≠."
    },
    {
        "question": "M·ª•c ƒë√≠ch c·ªßa Discount Factor (Œ≥) l√† g√¨?",
        "options": ["∆Øu ti√™n ph·∫ßn th∆∞·ªüng ng·∫Øn h·∫°n so v·ªõi d√†i h·∫°n", "Ch·ªçn h√†nh ƒë·ªông t·ªët nh·∫•t", 
                    "X√°c ƒë·ªãnh tr·∫°ng th√°i c·ªßa m√¥i tr∆∞·ªùng", "T√≠nh ph·∫ßn th∆∞·ªüng t·ª©c th·ªùi"],
        "answer": "∆Øu ti√™n ph·∫ßn th∆∞·ªüng ng·∫Øn h·∫°n so v·ªõi d√†i h·∫°n",
        "explanation": "Œ≥ ƒëi·ªÅu ch·ªânh t·∫ßm quan tr·ªçng c·ªßa ph·∫ßn th∆∞·ªüng t∆∞∆°ng lai."
    },
    {
        "question": "Trong v√≠ d·ª• m√™ cung, Environment ƒë·∫°i di·ªán cho c√°i g√¨?",
        "options": ["V·ªã tr√≠ c·ªßa robot", "L∆∞·ªõi 3x3 v·ªõi t∆∞·ªùng v√† kho b√°u", "H√†nh ƒë·ªông c·ªßa robot", "Ph·∫ßn th∆∞·ªüng khi ƒë·∫øn kho b√°u"],
        "answer": "L∆∞·ªõi 3x3 v·ªõi t∆∞·ªùng v√† kho b√°u",
        "explanation": "Environment l√† kh√¥ng gian m√† agent t∆∞∆°ng t√°c (l∆∞·ªõi m√™ cung)."
    },
    {
        "question": "State trong v√≠ d·ª• m√™ cung l√† g√¨?",
        "options": ["H√†nh ƒë·ªông c·ªßa robot (v√≠ d·ª•: di chuy·ªÉn sang ph·∫£i)", "Ch√≠nh s√°ch ch·ªçn h√†nh ƒë·ªông", 
                    "Ph·∫ßn th∆∞·ªüng nh·∫≠n ƒë∆∞·ª£c (v√≠ d·ª•: -1)", "V·ªã tr√≠ c·ªßa robot (v√≠ d·ª•: (2,2))"],
        "answer": "V·ªã tr√≠ c·ªßa robot (v√≠ d·ª•: (2,2))",
        "explanation": "State l√† tr·∫°ng th√°i hi·ªán t·∫°i c·ªßa agent, ·ªü ƒë√¢y l√† t·ªça ƒë·ªô."
    },
    {
        "question": "Trong m√™ cung, ƒëi·ªÅu g√¨ x·∫£y ra n·∫øu robot va v√†o t∆∞·ªùng?",
        "options": ["Nh·∫≠n +10 ph·∫ßn th∆∞·ªüng", "Chuy·ªÉn sang tr·∫°ng th√°i m·ªõi", "Nh·∫≠n -5 ph·∫ßn th∆∞·ªüng", "C·∫≠p nh·∫≠t ch√≠nh s√°ch"],
        "answer": "Nh·∫≠n -5 ph·∫ßn th∆∞·ªüng",
        "explanation": "Va v√†o t∆∞·ªùng th∆∞·ªùng ƒë∆∞·ª£c ph·∫°t b·∫±ng ph·∫ßn th∆∞·ªüng √¢m."
    },
    {
        "question": "Value Function ∆∞·ªõc l∆∞·ª£ng ƒëi·ªÅu g√¨?",
        "options": ["X√°c su·∫•t c·ªßa m·ªôt h√†nh ƒë·ªông", "Chuy·ªÉn ƒë·ªïi tr·∫°ng th√°i c·ªßa m√¥i tr∆∞·ªùng", 
                    "Ph·∫ßn th∆∞·ªüng t·ª©c th·ªùi cho m·ªôt h√†nh ƒë·ªông", "Ph·∫ßn th∆∞·ªüng d√†i h·∫°n c·ªßa m·ªôt tr·∫°ng th√°i"],
        "answer": "Ph·∫ßn th∆∞·ªüng d√†i h·∫°n c·ªßa m·ªôt tr·∫°ng th√°i",
        "explanation": "Value Function d·ª± ƒëo√°n t·ªïng ph·∫ßn th∆∞·ªüng t√≠ch l≈©y t·ª´ tr·∫°ng th√°i."
    },
    {
        "question": "ƒêi·ªÅu g√¨ x·∫£y ra n·∫øu Discount Factor (Œ≥) ƒë∆∞·ª£c ƒë·∫∑t b·∫±ng 0?",
        "options": ["Ph·∫ßn th∆∞·ªüng d√†i h·∫°n ƒë∆∞·ª£c ∆∞u ti√™n", "Ch·ªâ ph·∫ßn th∆∞·ªüng t·ª©c th·ªùi ƒë∆∞·ª£c xem x√©t", 
                    "Kh√¥ng c√≥ ph·∫ßn th∆∞·ªüng n√†o ƒë∆∞·ª£c t√≠nh", "H√†nh ƒë·ªông ƒë∆∞·ª£c ch·ªçn ng·∫´u nhi√™n"],
        "answer": "Ch·ªâ ph·∫ßn th∆∞·ªüng t·ª©c th·ªùi ƒë∆∞·ª£c xem x√©t",
        "explanation": "Œ≥=0 l√†m agent ch·ªâ quan t√¢m ƒë·∫øn ph·∫ßn th∆∞·ªüng hi·ªán t·∫°i."
    },
    {
        "question": "ƒê·∫∑c ƒëi·ªÉm ch√≠nh c·ªßa Environment trong RL l√† g√¨?",
        "options": ["N√≥ h·ªçc t·ª´ Agent", "N√≥ cung c·∫•p State v√† Reward", "N√≥ ch·ªçn h√†nh ƒë·ªông", "N√≥ ƒë·∫∑t Discount Factor"],
        "answer": "N√≥ cung c·∫•p State v√† Reward",
        "explanation": "Environment cung c·∫•p ph·∫£n h·ªìi (state, reward) cho h√†nh ƒë·ªông c·ªßa agent."
    }
]

# ==== H√ÄM HI·ªÇN TH·ªä QUIZ ====
def run_quiz(questions, session_key_prefix):
    with st.form(f"{session_key_prefix}_form"):
        for i, q in enumerate(questions):
            st.subheader(f"C√¢u {i+1}: {q['question']}")
            st.radio("Ch·ªçn m·ªôt ƒë√°p √°n:", q['options'], key=f"{session_key_prefix}_q{i}")
            with st.expander("Gi·∫£i th√≠ch c√¢u h·ªèi"):
                st.info(q["explanation"])
        col1, col2 = st.columns(2)
        with col1:
            submitted = st.form_submit_button("N·ªôp b√†i")
        with col2:
            reset = st.form_submit_button("L√†m l·∫°i")

    if submitted:
        answers = [st.session_state.get(f"{session_key_prefix}_q{i}", None) for i in range(len(questions))]
        st.session_state[f"{session_key_prefix}_answers"] = answers
        st.session_state[f"{session_key_prefix}_submitted"] = True
    elif reset:
        for i in range(len(questions)):
            key = f"{session_key_prefix}_q{i}"
            if key in st.session_state:
                del st.session_state[key]
        st.session_state[f"{session_key_prefix}_answers"] = [None] * len(questions)
        st.session_state[f"{session_key_prefix}_submitted"] = False

    if st.session_state.get(f"{session_key_prefix}_submitted", False):
        answers = st.session_state[f"{session_key_prefix}_answers"]
        not_answered = [i+1 for i, ans in enumerate(answers) if ans is None]
        if not_answered:
            st.warning(f"‚ùó B·∫°n ch∆∞a tr·∫£ l·ªùi c√¢u s·ªë: {', '.join(map(str, not_answered))}")
        else:
            score = sum(1 for i, ans in enumerate(answers) if ans == questions[i]["answer"])
            st.success(f"üéâ B·∫°n ƒë√£ ho√†n th√†nh b√†i tr·∫Øc nghi·ªám v·ªõi {score}/{len(questions)} c√¢u ƒë√∫ng!")
            st.write("### ‚ùå C√°c c√¢u b·∫°n tr·∫£ l·ªùi sai:")
            any_wrong = False
            for i, q in enumerate(questions):
                if answers[i] != q["answer"]:
                    any_wrong = True
                    st.markdown(f"**C√¢u {i+1}:** {q['question']}")
                    st.write(f"- ƒê√°p √°n b·∫°n ch·ªçn: {answers[i]}")
                    st.write(f"- ƒê√°p √°n ƒë√∫ng: {q['answer']}")
                    st.info(q["explanation"])
            if not any_wrong:
                st.success("üéâ B·∫°n ƒë√£ tr·∫£ l·ªùi ƒë√∫ng t·∫•t c·∫£ c√°c c√¢u h·ªèi!")

# ==== G·ªåI QUIZ D·ª∞A TR√äN PH·∫¶N ƒê∆Ø·ª¢C CH·ªåN ====
if section == "C∆° b·∫£n v·ªÅ AI v√† H·ªçc M√°y":
    run_quiz(ai_ml_questions, "ai_ml")
elif section == "Thu·∫≠t to√°n Ph√¢n c·ª•m":
    run_quiz(clustering_questions, "cluster")
elif section == "Gi·∫£m chi·ªÅu d·ªØ li·ªáu":
    run_quiz(dimred_questions, "dimred")
elif section == "H·ªìi quy Tuy·∫øn t√≠nh v√† Normal Equation":
    run_quiz(linear_regression_questions, "linear_reg")
elif section == "Gradient Descent":
    run_quiz(gradient_descent_questions, "grad_desc")
elif section == "Mini-batch, Stochastic, Batch Gradient Descent":
    run_quiz(gradient_variants_questions, "grad_vars")
elif section == "Multiple Linear Regression":
    run_quiz(multiple_regression_questions, "multi_reg")
elif section == "Regularization (Ridge, Lasso, Elastic Net)":
    run_quiz(regularization_questions, "regularization")
elif section == "Logistic Regression":
    run_quiz(logistic_regression_questions, "logistic_reg")
elif section == "Softmax Regression":
    run_quiz(softmax_regression_questions, "softmax_reg")
elif section == "Decision Trees":
    run_quiz(decision_tree_questions, "decision_tree")
elif section == "k-Nearest Neighbors (k-NN)":
    run_quiz(knn_questions, "knn")
elif section == "Naive Bayes":
    run_quiz(naive_bayes_questions, "naive_bayes")
elif section == "·ª®ng d·ª•ng Th·ª±c t·∫ø":
    run_quiz(real_world_questions, "real_world")
elif section == "Reinforcement Learning":
    run_quiz(reinforcement_learning_questions, "rl")